// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Application/Models/Proto/studio.protobuf
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Application/Models/Proto/studio.protobuf</summary>
public static partial class StudioReflection {

  #region Descriptor
  /// <summary>File descriptor for Application/Models/Proto/studio.protobuf</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static StudioReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CihBcHBsaWNhdGlvbi9Nb2RlbHMvUHJvdG8vc3R1ZGlvLnByb3RvYnVmIqcC",
          "CgVIZWxsbxITCgtzeXN0ZW1fbmFtZRgBIAIoCRIZCg5jb21wYXRfdmVyc2lv",
          "bhgCIAIoDToBMRIeChNpbmNyZW1lbnRhbF92ZXJzaW9uGAMgAigNOgEwEhIK",
          "CnB1YmxpY19rZXkYBCADKAwSEQoJY2hhbGxlbmdlGAUgASgMEhgKEGFwcGxp",
          "Y2F0aW9uX25hbWUYBiABKAkSGQoRY2RwX3ZlcnNpb25fbWFqb3IYByABKA0S",
          "GQoRY2RwX3ZlcnNpb25fbWlub3IYCCABKA0SGQoRY2RwX3ZlcnNpb25fcGF0",
          "Y2gYCSABKA0SGwoTaWRsZV9sb2Nrb3V0X3BlcmlvZBgKIAEoDRIfChdzeXN0",
          "ZW1fdXNlX25vdGlmaWNhdGlvbhgLIAEoCSKPAQoLQXV0aFJlcXVlc3QSDwoH",
          "dXNlcl9pZBgBIAEoCRI6ChJjaGFsbGVuZ2VfcmVzcG9uc2UYAiADKAsyHi5B",
          "dXRoUmVxdWVzdC5DaGFsbGVuZ2VSZXNwb25zZRozChFDaGFsbGVuZ2VSZXNw",
          "b25zZRIMCgR0eXBlGAEgASgJEhAKCHJlc3BvbnNlGAIgASgMIrABCiNBZGRp",
          "dGlvbmFsQ2hhbGxlbmdlUmVzcG9uc2VSZXF1aXJlZBIMCgR0eXBlGAEgASgJ",
          "Eg4KBnByb21wdBgCIAEoCRJBCglwYXJhbWV0ZXIYAyADKAsyLi5BZGRpdGlv",
          "bmFsQ2hhbGxlbmdlUmVzcG9uc2VSZXF1aXJlZC5QYXJhbWV0ZXIaKAoJUGFy",
          "YW1ldGVyEgwKBG5hbWUYASABKAkSDQoFdmFsdWUYAiABKAkikQMKDEF1dGhS",
          "ZXNwb25zZRIxCgtyZXN1bHRfY29kZRgBIAEoDjIcLkF1dGhSZXNwb25zZS5B",
          "dXRoUmVzdWx0Q29kZRITCgtyZXN1bHRfdGV4dBgCIAEoCRJUCiZhZGRpdGlv",
          "bmFsX2NoYWxsZW5nZV9yZXNwb25zZV9yZXF1aXJlZBgDIAMoCzIkLkFkZGl0",
          "aW9uYWxDaGFsbGVuZ2VSZXNwb25zZVJlcXVpcmVkIuIBCg5BdXRoUmVzdWx0",
          "Q29kZRIMCghlVW5rbm93bhAAEgwKCGVHcmFudGVkEAESIgoeZUdyYW50ZWRQ",
          "YXNzd29yZFdpbGxFeHBpcmVTb29uEAISGAoUZU5ld1Bhc3N3b3JkUmVxdWly",
          "ZWQQChIdChllSW52YWxpZENoYWxsZW5nZVJlc3BvbnNlEAsSHwobZUFkZGl0",
          "aW9uYWxSZXNwb25zZVJlcXVpcmVkEAwSFwoTZVRlbXBvcmFyaWx5QmxvY2tl",
          "ZBANEh0KGWVSZWF1dGhlbnRpY2F0aW9uUmVxdWlyZWQQDiK2BgoJQ29udGFp",
          "bmVyEiUKDG1lc3NhZ2VfdHlwZRgBIAEoDjIPLkNvbnRhaW5lci5UeXBlEhUK",
          "BWVycm9yGAIgASgLMgYuRXJyb3ISGQoRc3RydWN0dXJlX3JlcXVlc3QYAyAD",
          "KA0SIQoSc3RydWN0dXJlX3Jlc3BvbnNlGAQgAygLMgUuTm9kZRIlCg5nZXR0",
          "ZXJfcmVxdWVzdBgFIAMoCzINLlZhbHVlUmVxdWVzdBImCg9nZXR0ZXJfcmVz",
          "cG9uc2UYBiADKAsyDS5WYXJpYW50VmFsdWUSJQoOc2V0dGVyX3JlcXVlc3QY",
          "ByADKAsyDS5WYXJpYW50VmFsdWUSIQoZc3RydWN0dXJlX2NoYW5nZV9yZXNw",
          "b25zZRgIIAMoDRIdChVjdXJyZW50X3RpbWVfcmVzcG9uc2UYCSABKAQSJAoR",
          "Y2hpbGRfYWRkX3JlcXVlc3QYCiADKAsyCS5DaGlsZEFkZBIqChRjaGlsZF9y",
          "ZW1vdmVfcmVxdWVzdBgLIAMoCzIMLkNoaWxkUmVtb3ZlEiUKD3JlX2F1dGhf",
          "cmVxdWVzdBgMIAEoCzIMLkF1dGhSZXF1ZXN0EicKEHJlX2F1dGhfcmVzcG9u",
          "c2UYDSABKAsyDS5BdXRoUmVzcG9uc2UiyAIKBFR5cGUSEAoMZVJlbW90ZUVy",
          "cm9yEAASFQoRZVN0cnVjdHVyZVJlcXVlc3QQARIWChJlU3RydWN0dXJlUmVz",
          "cG9uc2UQAhISCg5lR2V0dGVyUmVxdWVzdBADEhMKD2VHZXR0ZXJSZXNwb25z",
          "ZRAEEhIKDmVTZXR0ZXJSZXF1ZXN0EAUSHAoYZVN0cnVjdHVyZUNoYW5nZVJl",
          "c3BvbnNlEAYSFwoTZUN1cnJlbnRUaW1lUmVxdWVzdBAHEhgKFGVDdXJyZW50",
          "VGltZVJlc3BvbnNlEAgSFAoQZUNoaWxkQWRkUmVxdWVzdBAJEhcKE2VDaGls",
          "ZFJlbW92ZVJlcXVlc3QQChISCg5lUmVhdXRoUmVxdWVzdBALEhMKD2VSZWF1",
          "dGhSZXNwb25zZRAMEhkKFWVBY3Rpdml0eU5vdGlmaWNhdGlvbhANKggIZBCA",
          "gICAAiKBAQoFRXJyb3ISDAoEY29kZRgBIAIoDRIMCgR0ZXh0GAIgASgJEg8K",
          "B25vZGVfaWQYAyABKA0SEQoJcGFyYW1ldGVyGAQgASgJEhEKCWNoYWxsZW5n",
          "ZRgFIAEoDBIbChNpZGxlX2xvY2tvdXRfcGVyaW9kGAYgASgNKggIZBCAgICA",
          "AiKWAwoESW5mbxIPCgdub2RlX2lkGAEgAigNEgwKBG5hbWUYAiACKAkSHwoJ",
          "bm9kZV90eXBlGAMgAigOMgwuQ0RQTm9kZVR5cGUSIQoKdmFsdWVfdHlwZRgE",
          "IAEoDjINLkNEUFZhbHVlVHlwZRIRCgl0eXBlX25hbWUYBSABKAkSEwoLc2Vy",
          "dmVyX2FkZHIYBiABKAkSEwoLc2VydmVyX3BvcnQYByABKA0SEAoIaXNfbG9j",
          "YWwYCCABKAgSDQoFZmxhZ3MYCSABKA0iwgEKBUZsYWdzEgkKBWVOb25lEAAS",
          "DwoLZU5vZGVJc0xlYWYQARIWChJlVmFsdWVJc1BlcnNpc3RlbnQQAhIUChBl",
          "VmFsdWVJc1JlYWRPbmx5EAQSFAoQZU5vZGVJc1JlbW92YWJsZRAIEhcKE2VO",
          "b2RlQ2FuQWRkQ2hpbGRyZW4QEBIUChBlTm9kZUlzUmVuYW1hYmxlECASEwoP",
          "ZU5vZGVJc0ludGVybmFsEEASFQoQZU5vZGVJc0ltcG9ydGFudBCAASoICGQQ",
          "gICAgAIiOgoETm9kZRITCgRpbmZvGAEgAigLMgUuSW5mbxITCgRub2RlGAIg",
          "AygLMgUuTm9kZSoICGQQgICAgAIiWQoIQ2hpbGRBZGQSFgoOcGFyZW50X25v",
          "ZGVfaWQYASACKA0SEgoKY2hpbGRfbmFtZRgCIAIoCRIXCg9jaGlsZF90eXBl",
          "X25hbWUYAyACKAkqCAhkEICAgIACIkMKC0NoaWxkUmVtb3ZlEhYKDnBhcmVu",
          "dF9ub2RlX2lkGAEgAigNEhIKCmNoaWxkX25hbWUYAiACKAkqCAhkEICAgIAC",
          "IpICCgxWYXJpYW50VmFsdWUSDwoHbm9kZV9pZBgBIAEoDRIPCgdkX3ZhbHVl",
          "GAIgASgBEg8KB2ZfdmFsdWUYAyABKAISEgoKdWk2NF92YWx1ZRgEIAEoBBIR",
          "CglpNjRfdmFsdWUYBSABKBISEAoIdWlfdmFsdWUYBiABKA0SDwoHaV92YWx1",
          "ZRgHIAEoERIQCgh1c192YWx1ZRgIIAEoDRIPCgdzX3ZhbHVlGAkgASgREhAK",
          "CHVjX3ZhbHVlGAogASgNEg8KB2NfdmFsdWUYCyABKBESDwoHYl92YWx1ZRgM",
          "IAEoCBIRCglzdHJfdmFsdWUYDSABKAkSEQoJdGltZXN0YW1wGA4gASgEKggI",
          "ZBCAgICAAiJYCgxWYWx1ZVJlcXVlc3QSDwoHbm9kZV9pZBgBIAIoDRIKCgJm",
          "cxgCIAEoARIMCgRzdG9wGAMgASgIEhMKC3NhbXBsZV9yYXRlGAQgASgBKggI",
          "ZBCAgICAAirVAQoPUmVtb3RlRXJyb3JDb2RlEhoKFmVBVVRIX1JFU1BPTlNF",
          "X0VYUElSRUQQARIUChBlSU5WQUxJRF9SRVFVRVNUEAoSHwobZVVOU1VQUE9S",
          "VEVEX0NPTlRBSU5FUl9UWVBFEBQSHwobZVZBTFVFX1RIUk9UVExJTkdfT0ND",
          "VVJSSU5HEB4SHQoZZVZBTFVFX1RIUk9UVExJTkdfU1RPUFBFRBAfEhUKEWVD",
          "SElMRF9BRERfRkFJTEVEECgSGAoUZUNISUxEX1JFTU9WRV9GQUlMRUQQMir7",
          "AQoLQ0RQTm9kZVR5cGUSGgoNQ0RQX1VOREVGSU5FRBD///////////8BEg4K",
          "CkNEUF9TWVNURU0QABITCg9DRFBfQVBQTElDQVRJT04QARIRCg1DRFBfQ09N",
          "UE9ORU5UEAISDgoKQ0RQX09CSkVDVBADEg8KC0NEUF9NRVNTQUdFEAQSEwoP",
          "Q0RQX0JBU0VfT0JKRUNUEAUSEAoMQ0RQX1BST1BFUlRZEAYSDwoLQ0RQX1NF",
          "VFRJTkcQBxIMCghDRFBfRU5VTRAIEhAKDENEUF9PUEVSQVRPUhAJEgwKCENE",
          "UF9OT0RFEAoSEQoNQ0RQX1VTRVJfVFlQRRBkKrwBCgxDRFBWYWx1ZVR5cGUS",
          "DgoKZVVOREVGSU5FRBAAEgsKB2VET1VCTEUQARILCgdlVUlOVDY0EAISCgoG",
          "ZUlOVDY0EAMSCgoGZUZMT0FUEAQSCQoFZVVJTlQQBRIICgRlSU5UEAYSCwoH",
          "ZVVTSE9SVBAHEgoKBmVTSE9SVBAIEgoKBmVVQ0hBUhAJEgkKBWVDSEFSEAoS",
          "CQoFZUJPT0wQCxILCgdlU1RSSU5HEAwSDQoJZVVTRVJUWVBFEGQ="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::RemoteErrorCode), typeof(global::CDPNodeType), typeof(global::CDPValueType), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Hello), global::Hello.Parser, new[]{ "SystemName", "CompatVersion", "IncrementalVersion", "PublicKey", "Challenge", "ApplicationName", "CdpVersionMajor", "CdpVersionMinor", "CdpVersionPatch", "IdleLockoutPeriod", "SystemUseNotification" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AuthRequest), global::AuthRequest.Parser, new[]{ "UserId", "ChallengeResponse" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AuthRequest.Types.ChallengeResponse), global::AuthRequest.Types.ChallengeResponse.Parser, new[]{ "Type", "Response" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::AdditionalChallengeResponseRequired), global::AdditionalChallengeResponseRequired.Parser, new[]{ "Type", "Prompt", "Parameter" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::AdditionalChallengeResponseRequired.Types.Parameter), global::AdditionalChallengeResponseRequired.Types.Parameter.Parser, new[]{ "Name", "Value" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::AuthResponse), global::AuthResponse.Parser, new[]{ "ResultCode", "ResultText", "AdditionalChallengeResponseRequired" }, null, new[]{ typeof(global::AuthResponse.Types.AuthResultCode) }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Container), global::Container.Parser, new[]{ "MessageType", "Error", "StructureRequest", "StructureResponse", "GetterRequest", "GetterResponse", "SetterRequest", "StructureChangeResponse", "CurrentTimeResponse", "ChildAddRequest", "ChildRemoveRequest", "ReAuthRequest", "ReAuthResponse" }, null, new[]{ typeof(global::Container.Types.Type) }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Error), global::Error.Parser, new[]{ "Code", "Text", "NodeId", "Parameter", "Challenge", "IdleLockoutPeriod" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Info), global::Info.Parser, new[]{ "NodeId", "Name", "NodeType", "ValueType", "TypeName", "ServerAddr", "ServerPort", "IsLocal", "Flags" }, null, new[]{ typeof(global::Info.Types.Flags) }, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Node), global::Node.Parser, new[]{ "Info", "Node_" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ChildAdd), global::ChildAdd.Parser, new[]{ "ParentNodeId", "ChildName", "ChildTypeName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ChildRemove), global::ChildRemove.Parser, new[]{ "ParentNodeId", "ChildName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::VariantValue), global::VariantValue.Parser, new[]{ "NodeId", "DValue", "FValue", "Ui64Value", "I64Value", "UiValue", "IValue", "UsValue", "SValue", "UcValue", "CValue", "BValue", "StrValue", "Timestamp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ValueRequest), global::ValueRequest.Parser, new[]{ "NodeId", "Fs", "Stop", "SampleRate" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum RemoteErrorCode {
  /// <summary>
  /// connection is in non-authenticated state (e.g. because of session inactivity timeout) -
  /// </summary>
  [pbr::OriginalName("eAUTH_RESPONSE_EXPIRED")] EAuthResponseExpired = 1,
  /// <summary>
  /// full reconnect or new AuthRequest with ChallengeResponse is needed to continue
  /// </summary>
  [pbr::OriginalName("eINVALID_REQUEST")] EInvalidRequest = 10,
  [pbr::OriginalName("eUNSUPPORTED_CONTAINER_TYPE")] EUnsupportedContainerType = 20,
  [pbr::OriginalName("eVALUE_THROTTLING_OCCURRING")] EValueThrottlingOccurring = 30,
  [pbr::OriginalName("eVALUE_THROTTLING_STOPPED")] EValueThrottlingStopped = 31,
  [pbr::OriginalName("eCHILD_ADD_FAILED")] EChildAddFailed = 40,
  [pbr::OriginalName("eCHILD_REMOVE_FAILED")] EChildRemoveFailed = 50,
}

/// <summary>
///* CDP Node base type identifier. 
/// </summary>
public enum CDPNodeType {
  [pbr::OriginalName("CDP_UNDEFINED")] CdpUndefined = -1,
  [pbr::OriginalName("CDP_SYSTEM")] CdpSystem = 0,
  [pbr::OriginalName("CDP_APPLICATION")] CdpApplication = 1,
  [pbr::OriginalName("CDP_COMPONENT")] CdpComponent = 2,
  [pbr::OriginalName("CDP_OBJECT")] CdpObject = 3,
  [pbr::OriginalName("CDP_MESSAGE")] CdpMessage = 4,
  [pbr::OriginalName("CDP_BASE_OBJECT")] CdpBaseObject = 5,
  [pbr::OriginalName("CDP_PROPERTY")] CdpProperty = 6,
  [pbr::OriginalName("CDP_SETTING")] CdpSetting = 7,
  [pbr::OriginalName("CDP_ENUM")] CdpEnum = 8,
  [pbr::OriginalName("CDP_OPERATOR")] CdpOperator = 9,
  [pbr::OriginalName("CDP_NODE")] CdpNode = 10,
  [pbr::OriginalName("CDP_USER_TYPE")] CdpUserType = 100,
}

/// <summary>
///* CDP Node value type identifier. 
/// </summary>
public enum CDPValueType {
  [pbr::OriginalName("eUNDEFINED")] EUndefined = 0,
  [pbr::OriginalName("eDOUBLE")] EDouble = 1,
  [pbr::OriginalName("eUINT64")] EUint64 = 2,
  [pbr::OriginalName("eINT64")] EInt64 = 3,
  [pbr::OriginalName("eFLOAT")] EFloat = 4,
  [pbr::OriginalName("eUINT")] EUint = 5,
  [pbr::OriginalName("eINT")] EInt = 6,
  [pbr::OriginalName("eUSHORT")] EUshort = 7,
  [pbr::OriginalName("eSHORT")] EShort = 8,
  [pbr::OriginalName("eUCHAR")] EUchar = 9,
  [pbr::OriginalName("eCHAR")] EChar = 10,
  [pbr::OriginalName("eBOOL")] EBool = 11,
  [pbr::OriginalName("eSTRING")] EString = 12,
  [pbr::OriginalName("eUSERTYPE")] EUsertype = 100,
}

#endregion

#region Messages
/// <summary>
///* Initial server connection response. 
/// </summary>
public sealed partial class Hello : pb::IMessage<Hello>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Hello> _parser = new pb::MessageParser<Hello>(() => new Hello());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Hello> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StudioReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Hello() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Hello(Hello other) : this() {
    _hasBits0 = other._hasBits0;
    systemName_ = other.systemName_;
    compatVersion_ = other.compatVersion_;
    incrementalVersion_ = other.incrementalVersion_;
    publicKey_ = other.publicKey_.Clone();
    challenge_ = other.challenge_;
    applicationName_ = other.applicationName_;
    cdpVersionMajor_ = other.cdpVersionMajor_;
    cdpVersionMinor_ = other.cdpVersionMinor_;
    cdpVersionPatch_ = other.cdpVersionPatch_;
    idleLockoutPeriod_ = other.idleLockoutPeriod_;
    systemUseNotification_ = other.systemUseNotification_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Hello Clone() {
    return new Hello(this);
  }

  /// <summary>Field number for the "system_name" field.</summary>
  public const int SystemNameFieldNumber = 1;
  private readonly static string SystemNameDefaultValue = "";

  private string systemName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SystemName {
    get { return systemName_ ?? SystemNameDefaultValue; }
    set {
      systemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "system_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSystemName {
    get { return systemName_ != null; }
  }
  /// <summary>Clears the value of the "system_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSystemName() {
    systemName_ = null;
  }

  /// <summary>Field number for the "compat_version" field.</summary>
  public const int CompatVersionFieldNumber = 2;
  private readonly static uint CompatVersionDefaultValue = 1;

  private uint compatVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CompatVersion {
    get { if ((_hasBits0 & 1) != 0) { return compatVersion_; } else { return CompatVersionDefaultValue; } }
    set {
      _hasBits0 |= 1;
      compatVersion_ = value;
    }
  }
  /// <summary>Gets whether the "compat_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCompatVersion {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "compat_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCompatVersion() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "incremental_version" field.</summary>
  public const int IncrementalVersionFieldNumber = 3;
  private readonly static uint IncrementalVersionDefaultValue = 0;

  private uint incrementalVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint IncrementalVersion {
    get { if ((_hasBits0 & 2) != 0) { return incrementalVersion_; } else { return IncrementalVersionDefaultValue; } }
    set {
      _hasBits0 |= 2;
      incrementalVersion_ = value;
    }
  }
  /// <summary>Gets whether the "incremental_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIncrementalVersion {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "incremental_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIncrementalVersion() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "public_key" field.</summary>
  public const int PublicKeyFieldNumber = 4;
  private static readonly pb::FieldCodec<pb::ByteString> _repeated_publicKey_codec
      = pb::FieldCodec.ForBytes(34);
  private readonly pbc::RepeatedField<pb::ByteString> publicKey_ = new pbc::RepeatedField<pb::ByteString>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<pb::ByteString> PublicKey {
    get { return publicKey_; }
  }

  /// <summary>Field number for the "challenge" field.</summary>
  public const int ChallengeFieldNumber = 5;
  private readonly static pb::ByteString ChallengeDefaultValue = pb::ByteString.Empty;

  private pb::ByteString challenge_;
  /// <summary>
  /// if challenge exists then server expects authentication (AuthRequest message)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Challenge {
    get { return challenge_ ?? ChallengeDefaultValue; }
    set {
      challenge_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "challenge" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasChallenge {
    get { return challenge_ != null; }
  }
  /// <summary>Clears the value of the "challenge" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearChallenge() {
    challenge_ = null;
  }

  /// <summary>Field number for the "application_name" field.</summary>
  public const int ApplicationNameFieldNumber = 6;
  private readonly static string ApplicationNameDefaultValue = "";

  private string applicationName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ApplicationName {
    get { return applicationName_ ?? ApplicationNameDefaultValue; }
    set {
      applicationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "application_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasApplicationName {
    get { return applicationName_ != null; }
  }
  /// <summary>Clears the value of the "application_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearApplicationName() {
    applicationName_ = null;
  }

  /// <summary>Field number for the "cdp_version_major" field.</summary>
  public const int CdpVersionMajorFieldNumber = 7;
  private readonly static uint CdpVersionMajorDefaultValue = 0;

  private uint cdpVersionMajor_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CdpVersionMajor {
    get { if ((_hasBits0 & 4) != 0) { return cdpVersionMajor_; } else { return CdpVersionMajorDefaultValue; } }
    set {
      _hasBits0 |= 4;
      cdpVersionMajor_ = value;
    }
  }
  /// <summary>Gets whether the "cdp_version_major" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCdpVersionMajor {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "cdp_version_major" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCdpVersionMajor() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "cdp_version_minor" field.</summary>
  public const int CdpVersionMinorFieldNumber = 8;
  private readonly static uint CdpVersionMinorDefaultValue = 0;

  private uint cdpVersionMinor_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CdpVersionMinor {
    get { if ((_hasBits0 & 8) != 0) { return cdpVersionMinor_; } else { return CdpVersionMinorDefaultValue; } }
    set {
      _hasBits0 |= 8;
      cdpVersionMinor_ = value;
    }
  }
  /// <summary>Gets whether the "cdp_version_minor" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCdpVersionMinor {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "cdp_version_minor" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCdpVersionMinor() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "cdp_version_patch" field.</summary>
  public const int CdpVersionPatchFieldNumber = 9;
  private readonly static uint CdpVersionPatchDefaultValue = 0;

  private uint cdpVersionPatch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CdpVersionPatch {
    get { if ((_hasBits0 & 16) != 0) { return cdpVersionPatch_; } else { return CdpVersionPatchDefaultValue; } }
    set {
      _hasBits0 |= 16;
      cdpVersionPatch_ = value;
    }
  }
  /// <summary>Gets whether the "cdp_version_patch" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCdpVersionPatch {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "cdp_version_patch" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCdpVersionPatch() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "idle_lockout_period" field.</summary>
  public const int IdleLockoutPeriodFieldNumber = 10;
  private readonly static uint IdleLockoutPeriodDefaultValue = 0;

  private uint idleLockoutPeriod_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint IdleLockoutPeriod {
    get { if ((_hasBits0 & 32) != 0) { return idleLockoutPeriod_; } else { return IdleLockoutPeriodDefaultValue; } }
    set {
      _hasBits0 |= 32;
      idleLockoutPeriod_ = value;
    }
  }
  /// <summary>Gets whether the "idle_lockout_period" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIdleLockoutPeriod {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "idle_lockout_period" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIdleLockoutPeriod() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "system_use_notification" field.</summary>
  public const int SystemUseNotificationFieldNumber = 11;
  private readonly static string SystemUseNotificationDefaultValue = "";

  private string systemUseNotification_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SystemUseNotification {
    get { return systemUseNotification_ ?? SystemUseNotificationDefaultValue; }
    set {
      systemUseNotification_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "system_use_notification" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSystemUseNotification {
    get { return systemUseNotification_ != null; }
  }
  /// <summary>Clears the value of the "system_use_notification" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSystemUseNotification() {
    systemUseNotification_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Hello);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Hello other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SystemName != other.SystemName) return false;
    if (CompatVersion != other.CompatVersion) return false;
    if (IncrementalVersion != other.IncrementalVersion) return false;
    if(!publicKey_.Equals(other.publicKey_)) return false;
    if (Challenge != other.Challenge) return false;
    if (ApplicationName != other.ApplicationName) return false;
    if (CdpVersionMajor != other.CdpVersionMajor) return false;
    if (CdpVersionMinor != other.CdpVersionMinor) return false;
    if (CdpVersionPatch != other.CdpVersionPatch) return false;
    if (IdleLockoutPeriod != other.IdleLockoutPeriod) return false;
    if (SystemUseNotification != other.SystemUseNotification) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSystemName) hash ^= SystemName.GetHashCode();
    if (HasCompatVersion) hash ^= CompatVersion.GetHashCode();
    if (HasIncrementalVersion) hash ^= IncrementalVersion.GetHashCode();
    hash ^= publicKey_.GetHashCode();
    if (HasChallenge) hash ^= Challenge.GetHashCode();
    if (HasApplicationName) hash ^= ApplicationName.GetHashCode();
    if (HasCdpVersionMajor) hash ^= CdpVersionMajor.GetHashCode();
    if (HasCdpVersionMinor) hash ^= CdpVersionMinor.GetHashCode();
    if (HasCdpVersionPatch) hash ^= CdpVersionPatch.GetHashCode();
    if (HasIdleLockoutPeriod) hash ^= IdleLockoutPeriod.GetHashCode();
    if (HasSystemUseNotification) hash ^= SystemUseNotification.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSystemName) {
      output.WriteRawTag(10);
      output.WriteString(SystemName);
    }
    if (HasCompatVersion) {
      output.WriteRawTag(16);
      output.WriteUInt32(CompatVersion);
    }
    if (HasIncrementalVersion) {
      output.WriteRawTag(24);
      output.WriteUInt32(IncrementalVersion);
    }
    publicKey_.WriteTo(output, _repeated_publicKey_codec);
    if (HasChallenge) {
      output.WriteRawTag(42);
      output.WriteBytes(Challenge);
    }
    if (HasApplicationName) {
      output.WriteRawTag(50);
      output.WriteString(ApplicationName);
    }
    if (HasCdpVersionMajor) {
      output.WriteRawTag(56);
      output.WriteUInt32(CdpVersionMajor);
    }
    if (HasCdpVersionMinor) {
      output.WriteRawTag(64);
      output.WriteUInt32(CdpVersionMinor);
    }
    if (HasCdpVersionPatch) {
      output.WriteRawTag(72);
      output.WriteUInt32(CdpVersionPatch);
    }
    if (HasIdleLockoutPeriod) {
      output.WriteRawTag(80);
      output.WriteUInt32(IdleLockoutPeriod);
    }
    if (HasSystemUseNotification) {
      output.WriteRawTag(90);
      output.WriteString(SystemUseNotification);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSystemName) {
      output.WriteRawTag(10);
      output.WriteString(SystemName);
    }
    if (HasCompatVersion) {
      output.WriteRawTag(16);
      output.WriteUInt32(CompatVersion);
    }
    if (HasIncrementalVersion) {
      output.WriteRawTag(24);
      output.WriteUInt32(IncrementalVersion);
    }
    publicKey_.WriteTo(ref output, _repeated_publicKey_codec);
    if (HasChallenge) {
      output.WriteRawTag(42);
      output.WriteBytes(Challenge);
    }
    if (HasApplicationName) {
      output.WriteRawTag(50);
      output.WriteString(ApplicationName);
    }
    if (HasCdpVersionMajor) {
      output.WriteRawTag(56);
      output.WriteUInt32(CdpVersionMajor);
    }
    if (HasCdpVersionMinor) {
      output.WriteRawTag(64);
      output.WriteUInt32(CdpVersionMinor);
    }
    if (HasCdpVersionPatch) {
      output.WriteRawTag(72);
      output.WriteUInt32(CdpVersionPatch);
    }
    if (HasIdleLockoutPeriod) {
      output.WriteRawTag(80);
      output.WriteUInt32(IdleLockoutPeriod);
    }
    if (HasSystemUseNotification) {
      output.WriteRawTag(90);
      output.WriteString(SystemUseNotification);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSystemName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SystemName);
    }
    if (HasCompatVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CompatVersion);
    }
    if (HasIncrementalVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IncrementalVersion);
    }
    size += publicKey_.CalculateSize(_repeated_publicKey_codec);
    if (HasChallenge) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Challenge);
    }
    if (HasApplicationName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationName);
    }
    if (HasCdpVersionMajor) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CdpVersionMajor);
    }
    if (HasCdpVersionMinor) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CdpVersionMinor);
    }
    if (HasCdpVersionPatch) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CdpVersionPatch);
    }
    if (HasIdleLockoutPeriod) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IdleLockoutPeriod);
    }
    if (HasSystemUseNotification) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SystemUseNotification);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Hello other) {
    if (other == null) {
      return;
    }
    if (other.HasSystemName) {
      SystemName = other.SystemName;
    }
    if (other.HasCompatVersion) {
      CompatVersion = other.CompatVersion;
    }
    if (other.HasIncrementalVersion) {
      IncrementalVersion = other.IncrementalVersion;
    }
    publicKey_.Add(other.publicKey_);
    if (other.HasChallenge) {
      Challenge = other.Challenge;
    }
    if (other.HasApplicationName) {
      ApplicationName = other.ApplicationName;
    }
    if (other.HasCdpVersionMajor) {
      CdpVersionMajor = other.CdpVersionMajor;
    }
    if (other.HasCdpVersionMinor) {
      CdpVersionMinor = other.CdpVersionMinor;
    }
    if (other.HasCdpVersionPatch) {
      CdpVersionPatch = other.CdpVersionPatch;
    }
    if (other.HasIdleLockoutPeriod) {
      IdleLockoutPeriod = other.IdleLockoutPeriod;
    }
    if (other.HasSystemUseNotification) {
      SystemUseNotification = other.SystemUseNotification;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SystemName = input.ReadString();
          break;
        }
        case 16: {
          CompatVersion = input.ReadUInt32();
          break;
        }
        case 24: {
          IncrementalVersion = input.ReadUInt32();
          break;
        }
        case 34: {
          publicKey_.AddEntriesFrom(input, _repeated_publicKey_codec);
          break;
        }
        case 42: {
          Challenge = input.ReadBytes();
          break;
        }
        case 50: {
          ApplicationName = input.ReadString();
          break;
        }
        case 56: {
          CdpVersionMajor = input.ReadUInt32();
          break;
        }
        case 64: {
          CdpVersionMinor = input.ReadUInt32();
          break;
        }
        case 72: {
          CdpVersionPatch = input.ReadUInt32();
          break;
        }
        case 80: {
          IdleLockoutPeriod = input.ReadUInt32();
          break;
        }
        case 90: {
          SystemUseNotification = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          SystemName = input.ReadString();
          break;
        }
        case 16: {
          CompatVersion = input.ReadUInt32();
          break;
        }
        case 24: {
          IncrementalVersion = input.ReadUInt32();
          break;
        }
        case 34: {
          publicKey_.AddEntriesFrom(ref input, _repeated_publicKey_codec);
          break;
        }
        case 42: {
          Challenge = input.ReadBytes();
          break;
        }
        case 50: {
          ApplicationName = input.ReadString();
          break;
        }
        case 56: {
          CdpVersionMajor = input.ReadUInt32();
          break;
        }
        case 64: {
          CdpVersionMinor = input.ReadUInt32();
          break;
        }
        case 72: {
          CdpVersionPatch = input.ReadUInt32();
          break;
        }
        case 80: {
          IdleLockoutPeriod = input.ReadUInt32();
          break;
        }
        case 90: {
          SystemUseNotification = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
///* Server expects this response if it sent a auth_required true. 
/// </summary>
public sealed partial class AuthRequest : pb::IMessage<AuthRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<AuthRequest> _parser = new pb::MessageParser<AuthRequest>(() => new AuthRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<AuthRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StudioReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AuthRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AuthRequest(AuthRequest other) : this() {
    userId_ = other.userId_;
    challengeResponse_ = other.challengeResponse_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AuthRequest Clone() {
    return new AuthRequest(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private readonly static string UserIdDefaultValue = "";

  private string userId_;
  /// <summary>
  /// case-insensitive (can be sent in any casing)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string UserId {
    get { return userId_ ?? UserIdDefaultValue; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "user_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUserId {
    get { return userId_ != null; }
  }
  /// <summary>Clears the value of the "user_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUserId() {
    userId_ = null;
  }

  /// <summary>Field number for the "challenge_response" field.</summary>
  public const int ChallengeResponseFieldNumber = 2;
  private static readonly pb::FieldCodec<global::AuthRequest.Types.ChallengeResponse> _repeated_challengeResponse_codec
      = pb::FieldCodec.ForMessage(18, global::AuthRequest.Types.ChallengeResponse.Parser);
  private readonly pbc::RepeatedField<global::AuthRequest.Types.ChallengeResponse> challengeResponse_ = new pbc::RepeatedField<global::AuthRequest.Types.ChallengeResponse>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::AuthRequest.Types.ChallengeResponse> ChallengeResponse {
    get { return challengeResponse_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as AuthRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(AuthRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if(!challengeResponse_.Equals(other.challengeResponse_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasUserId) hash ^= UserId.GetHashCode();
    hash ^= challengeResponse_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasUserId) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    challengeResponse_.WriteTo(output, _repeated_challengeResponse_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasUserId) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    challengeResponse_.WriteTo(ref output, _repeated_challengeResponse_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasUserId) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    size += challengeResponse_.CalculateSize(_repeated_challengeResponse_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(AuthRequest other) {
    if (other == null) {
      return;
    }
    if (other.HasUserId) {
      UserId = other.UserId;
    }
    challengeResponse_.Add(other.challengeResponse_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          challengeResponse_.AddEntriesFrom(input, _repeated_challengeResponse_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 18: {
          challengeResponse_.AddEntriesFrom(ref input, _repeated_challengeResponse_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the AuthRequest message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class ChallengeResponse : pb::IMessage<ChallengeResponse>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ChallengeResponse> _parser = new pb::MessageParser<ChallengeResponse>(() => new ChallengeResponse());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<ChallengeResponse> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::AuthRequest.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ChallengeResponse() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ChallengeResponse(ChallengeResponse other) : this() {
        type_ = other.type_;
        response_ = other.response_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ChallengeResponse Clone() {
        return new ChallengeResponse(this);
      }

      /// <summary>Field number for the "type" field.</summary>
      public const int TypeFieldNumber = 1;
      private readonly static string TypeDefaultValue = "";

      private string type_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Type {
        get { return type_ ?? TypeDefaultValue; }
        set {
          type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasType {
        get { return type_ != null; }
      }
      /// <summary>Clears the value of the "type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearType() {
        type_ = null;
      }

      /// <summary>Field number for the "response" field.</summary>
      public const int ResponseFieldNumber = 2;
      private readonly static pb::ByteString ResponseDefaultValue = pb::ByteString.Empty;

      private pb::ByteString response_;
      /// <summary>
      /// data corresponding to the type, eg. hash(challenge + password)
      /// </summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pb::ByteString Response {
        get { return response_ ?? ResponseDefaultValue; }
        set {
          response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "response" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasResponse {
        get { return response_ != null; }
      }
      /// <summary>Clears the value of the "response" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearResponse() {
        response_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as ChallengeResponse);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(ChallengeResponse other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Type != other.Type) return false;
        if (Response != other.Response) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasType) hash ^= Type.GetHashCode();
        if (HasResponse) hash ^= Response.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasType) {
          output.WriteRawTag(10);
          output.WriteString(Type);
        }
        if (HasResponse) {
          output.WriteRawTag(18);
          output.WriteBytes(Response);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasType) {
          output.WriteRawTag(10);
          output.WriteString(Type);
        }
        if (HasResponse) {
          output.WriteRawTag(18);
          output.WriteBytes(Response);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasType) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
        }
        if (HasResponse) {
          size += 1 + pb::CodedOutputStream.ComputeBytesSize(Response);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(ChallengeResponse other) {
        if (other == null) {
          return;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasResponse) {
          Response = other.Response;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Type = input.ReadString();
              break;
            }
            case 18: {
              Response = input.ReadBytes();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Type = input.ReadString();
              break;
            }
            case 18: {
              Response = input.ReadBytes();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

public sealed partial class AdditionalChallengeResponseRequired : pb::IMessage<AdditionalChallengeResponseRequired>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<AdditionalChallengeResponseRequired> _parser = new pb::MessageParser<AdditionalChallengeResponseRequired>(() => new AdditionalChallengeResponseRequired());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<AdditionalChallengeResponseRequired> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StudioReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AdditionalChallengeResponseRequired() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AdditionalChallengeResponseRequired(AdditionalChallengeResponseRequired other) : this() {
    type_ = other.type_;
    prompt_ = other.prompt_;
    parameter_ = other.parameter_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AdditionalChallengeResponseRequired Clone() {
    return new AdditionalChallengeResponseRequired(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private readonly static string TypeDefaultValue = "";

  private string type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Type {
    get { return type_ ?? TypeDefaultValue; }
    set {
      type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasType {
    get { return type_ != null; }
  }
  /// <summary>Clears the value of the "type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearType() {
    type_ = null;
  }

  /// <summary>Field number for the "prompt" field.</summary>
  public const int PromptFieldNumber = 2;
  private readonly static string PromptDefaultValue = "";

  private string prompt_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Prompt {
    get { return prompt_ ?? PromptDefaultValue; }
    set {
      prompt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "prompt" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPrompt {
    get { return prompt_ != null; }
  }
  /// <summary>Clears the value of the "prompt" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPrompt() {
    prompt_ = null;
  }

  /// <summary>Field number for the "parameter" field.</summary>
  public const int ParameterFieldNumber = 3;
  private static readonly pb::FieldCodec<global::AdditionalChallengeResponseRequired.Types.Parameter> _repeated_parameter_codec
      = pb::FieldCodec.ForMessage(26, global::AdditionalChallengeResponseRequired.Types.Parameter.Parser);
  private readonly pbc::RepeatedField<global::AdditionalChallengeResponseRequired.Types.Parameter> parameter_ = new pbc::RepeatedField<global::AdditionalChallengeResponseRequired.Types.Parameter>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::AdditionalChallengeResponseRequired.Types.Parameter> Parameter {
    get { return parameter_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as AdditionalChallengeResponseRequired);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(AdditionalChallengeResponseRequired other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Prompt != other.Prompt) return false;
    if(!parameter_.Equals(other.parameter_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasType) hash ^= Type.GetHashCode();
    if (HasPrompt) hash ^= Prompt.GetHashCode();
    hash ^= parameter_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasType) {
      output.WriteRawTag(10);
      output.WriteString(Type);
    }
    if (HasPrompt) {
      output.WriteRawTag(18);
      output.WriteString(Prompt);
    }
    parameter_.WriteTo(output, _repeated_parameter_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasType) {
      output.WriteRawTag(10);
      output.WriteString(Type);
    }
    if (HasPrompt) {
      output.WriteRawTag(18);
      output.WriteString(Prompt);
    }
    parameter_.WriteTo(ref output, _repeated_parameter_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasType) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
    }
    if (HasPrompt) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Prompt);
    }
    size += parameter_.CalculateSize(_repeated_parameter_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(AdditionalChallengeResponseRequired other) {
    if (other == null) {
      return;
    }
    if (other.HasType) {
      Type = other.Type;
    }
    if (other.HasPrompt) {
      Prompt = other.Prompt;
    }
    parameter_.Add(other.parameter_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Type = input.ReadString();
          break;
        }
        case 18: {
          Prompt = input.ReadString();
          break;
        }
        case 26: {
          parameter_.AddEntriesFrom(input, _repeated_parameter_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Type = input.ReadString();
          break;
        }
        case 18: {
          Prompt = input.ReadString();
          break;
        }
        case 26: {
          parameter_.AddEntriesFrom(ref input, _repeated_parameter_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the AdditionalChallengeResponseRequired message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public sealed partial class Parameter : pb::IMessage<Parameter>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Parameter> _parser = new pb::MessageParser<Parameter>(() => new Parameter());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Parameter> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::AdditionalChallengeResponseRequired.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Parameter() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Parameter(Parameter other) : this() {
        name_ = other.name_;
        value_ = other.value_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Parameter Clone() {
        return new Parameter(this);
      }

      /// <summary>Field number for the "name" field.</summary>
      public const int NameFieldNumber = 1;
      private readonly static string NameDefaultValue = "";

      private string name_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Name {
        get { return name_ ?? NameDefaultValue; }
        set {
          name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasName {
        get { return name_ != null; }
      }
      /// <summary>Clears the value of the "name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearName() {
        name_ = null;
      }

      /// <summary>Field number for the "value" field.</summary>
      public const int ValueFieldNumber = 2;
      private readonly static string ValueDefaultValue = "";

      private string value_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Value {
        get { return value_ ?? ValueDefaultValue; }
        set {
          value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "value" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasValue {
        get { return value_ != null; }
      }
      /// <summary>Clears the value of the "value" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearValue() {
        value_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Parameter);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Parameter other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Name != other.Name) return false;
        if (Value != other.Value) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasName) hash ^= Name.GetHashCode();
        if (HasValue) hash ^= Value.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasName) {
          output.WriteRawTag(10);
          output.WriteString(Name);
        }
        if (HasValue) {
          output.WriteRawTag(18);
          output.WriteString(Value);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasName) {
          output.WriteRawTag(10);
          output.WriteString(Name);
        }
        if (HasValue) {
          output.WriteRawTag(18);
          output.WriteString(Value);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
        }
        if (HasValue) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Parameter other) {
        if (other == null) {
          return;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Name = input.ReadString();
              break;
            }
            case 18: {
              Value = input.ReadString();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Name = input.ReadString();
              break;
            }
            case 18: {
              Value = input.ReadString();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

/// <summary>
///* Sent by server as a response to a AuthRequest. 
/// </summary>
public sealed partial class AuthResponse : pb::IMessage<AuthResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<AuthResponse> _parser = new pb::MessageParser<AuthResponse>(() => new AuthResponse());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<AuthResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StudioReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AuthResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AuthResponse(AuthResponse other) : this() {
    _hasBits0 = other._hasBits0;
    resultCode_ = other.resultCode_;
    resultText_ = other.resultText_;
    additionalChallengeResponseRequired_ = other.additionalChallengeResponseRequired_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public AuthResponse Clone() {
    return new AuthResponse(this);
  }

  /// <summary>Field number for the "result_code" field.</summary>
  public const int ResultCodeFieldNumber = 1;
  private readonly static global::AuthResponse.Types.AuthResultCode ResultCodeDefaultValue = global::AuthResponse.Types.AuthResultCode.EUnknown;

  private global::AuthResponse.Types.AuthResultCode resultCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::AuthResponse.Types.AuthResultCode ResultCode {
    get { if ((_hasBits0 & 1) != 0) { return resultCode_; } else { return ResultCodeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      resultCode_ = value;
    }
  }
  /// <summary>Gets whether the "result_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasResultCode {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "result_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearResultCode() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "result_text" field.</summary>
  public const int ResultTextFieldNumber = 2;
  private readonly static string ResultTextDefaultValue = "";

  private string resultText_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ResultText {
    get { return resultText_ ?? ResultTextDefaultValue; }
    set {
      resultText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "result_text" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasResultText {
    get { return resultText_ != null; }
  }
  /// <summary>Clears the value of the "result_text" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearResultText() {
    resultText_ = null;
  }

  /// <summary>Field number for the "additional_challenge_response_required" field.</summary>
  public const int AdditionalChallengeResponseRequiredFieldNumber = 3;
  private static readonly pb::FieldCodec<global::AdditionalChallengeResponseRequired> _repeated_additionalChallengeResponseRequired_codec
      = pb::FieldCodec.ForMessage(26, global::AdditionalChallengeResponseRequired.Parser);
  private readonly pbc::RepeatedField<global::AdditionalChallengeResponseRequired> additionalChallengeResponseRequired_ = new pbc::RepeatedField<global::AdditionalChallengeResponseRequired>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::AdditionalChallengeResponseRequired> AdditionalChallengeResponseRequired {
    get { return additionalChallengeResponseRequired_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as AuthResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(AuthResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ResultCode != other.ResultCode) return false;
    if (ResultText != other.ResultText) return false;
    if(!additionalChallengeResponseRequired_.Equals(other.additionalChallengeResponseRequired_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasResultCode) hash ^= ResultCode.GetHashCode();
    if (HasResultText) hash ^= ResultText.GetHashCode();
    hash ^= additionalChallengeResponseRequired_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasResultCode) {
      output.WriteRawTag(8);
      output.WriteEnum((int) ResultCode);
    }
    if (HasResultText) {
      output.WriteRawTag(18);
      output.WriteString(ResultText);
    }
    additionalChallengeResponseRequired_.WriteTo(output, _repeated_additionalChallengeResponseRequired_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasResultCode) {
      output.WriteRawTag(8);
      output.WriteEnum((int) ResultCode);
    }
    if (HasResultText) {
      output.WriteRawTag(18);
      output.WriteString(ResultText);
    }
    additionalChallengeResponseRequired_.WriteTo(ref output, _repeated_additionalChallengeResponseRequired_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasResultCode) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResultCode);
    }
    if (HasResultText) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultText);
    }
    size += additionalChallengeResponseRequired_.CalculateSize(_repeated_additionalChallengeResponseRequired_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(AuthResponse other) {
    if (other == null) {
      return;
    }
    if (other.HasResultCode) {
      ResultCode = other.ResultCode;
    }
    if (other.HasResultText) {
      ResultText = other.ResultText;
    }
    additionalChallengeResponseRequired_.Add(other.additionalChallengeResponseRequired_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ResultCode = (global::AuthResponse.Types.AuthResultCode) input.ReadEnum();
          break;
        }
        case 18: {
          ResultText = input.ReadString();
          break;
        }
        case 26: {
          additionalChallengeResponseRequired_.AddEntriesFrom(input, _repeated_additionalChallengeResponseRequired_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ResultCode = (global::AuthResponse.Types.AuthResultCode) input.ReadEnum();
          break;
        }
        case 18: {
          ResultText = input.ReadString();
          break;
        }
        case 26: {
          additionalChallengeResponseRequired_.AddEntriesFrom(ref input, _repeated_additionalChallengeResponseRequired_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the AuthResponse message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum AuthResultCode {
      [pbr::OriginalName("eUnknown")] EUnknown = 0,
      [pbr::OriginalName("eGranted")] EGranted = 1,
      /// <summary>
      /// expiry timestamp is provided in result_text
      /// </summary>
      [pbr::OriginalName("eGrantedPasswordWillExpireSoon")] EGrantedPasswordWillExpireSoon = 2,
      /// <summary>
      /// AuthRequest with additional response with new username + password hash is required
      /// </summary>
      [pbr::OriginalName("eNewPasswordRequired")] ENewPasswordRequired = 10,
      /// <summary>
      /// challenge response sent was invalid
      /// </summary>
      [pbr::OriginalName("eInvalidChallengeResponse")] EInvalidChallengeResponse = 11,
      /// <summary>
      /// additional challenge responses based on additional credential types are required
      /// </summary>
      [pbr::OriginalName("eAdditionalResponseRequired")] EAdditionalResponseRequired = 12,
      /// <summary>
      /// authentication is temporarily blocked because of too many failed attempts
      /// </summary>
      [pbr::OriginalName("eTemporarilyBlocked")] ETemporarilyBlocked = 13,
      /// <summary>
      /// server requires re-authentication (e.g. because of being idle), implementation
      /// </summary>
      [pbr::OriginalName("eReauthenticationRequired")] EReauthenticationRequired = 14,
    }

  }
  #endregion

}

/// <summary>
///* Common union-style base type for all Protobuf messages in StudioAPI. 
/// </summary>
public sealed partial class Container : pb::IExtendableMessage<Container>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Container> _parser = new pb::MessageParser<Container>(() => new Container());
  private pb::UnknownFieldSet _unknownFields;
  private pb::ExtensionSet<Container> _extensions;
  private pb::ExtensionSet<Container> _Extensions { get { return _extensions; } }
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Container> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StudioReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Container() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Container(Container other) : this() {
    _hasBits0 = other._hasBits0;
    messageType_ = other.messageType_;
    error_ = other.error_ != null ? other.error_.Clone() : null;
    structureRequest_ = other.structureRequest_.Clone();
    structureResponse_ = other.structureResponse_.Clone();
    getterRequest_ = other.getterRequest_.Clone();
    getterResponse_ = other.getterResponse_.Clone();
    setterRequest_ = other.setterRequest_.Clone();
    structureChangeResponse_ = other.structureChangeResponse_.Clone();
    currentTimeResponse_ = other.currentTimeResponse_;
    childAddRequest_ = other.childAddRequest_.Clone();
    childRemoveRequest_ = other.childRemoveRequest_.Clone();
    reAuthRequest_ = other.reAuthRequest_ != null ? other.reAuthRequest_.Clone() : null;
    reAuthResponse_ = other.reAuthResponse_ != null ? other.reAuthResponse_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    _extensions = pb::ExtensionSet.Clone(other._extensions);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Container Clone() {
    return new Container(this);
  }

  /// <summary>Field number for the "message_type" field.</summary>
  public const int MessageTypeFieldNumber = 1;
  private readonly static global::Container.Types.Type MessageTypeDefaultValue = global::Container.Types.Type.ERemoteError;

  private global::Container.Types.Type messageType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Container.Types.Type MessageType {
    get { if ((_hasBits0 & 1) != 0) { return messageType_; } else { return MessageTypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      messageType_ = value;
    }
  }
  /// <summary>Gets whether the "message_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMessageType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "message_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMessageType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "error" field.</summary>
  public const int ErrorFieldNumber = 2;
  private global::Error error_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Error Error {
    get { return error_; }
    set {
      error_ = value;
    }
  }

  /// <summary>Field number for the "structure_request" field.</summary>
  public const int StructureRequestFieldNumber = 3;
  private static readonly pb::FieldCodec<uint> _repeated_structureRequest_codec
      = pb::FieldCodec.ForUInt32(24);
  private readonly pbc::RepeatedField<uint> structureRequest_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> StructureRequest {
    get { return structureRequest_; }
  }

  /// <summary>Field number for the "structure_response" field.</summary>
  public const int StructureResponseFieldNumber = 4;
  private static readonly pb::FieldCodec<global::Node> _repeated_structureResponse_codec
      = pb::FieldCodec.ForMessage(34, global::Node.Parser);
  private readonly pbc::RepeatedField<global::Node> structureResponse_ = new pbc::RepeatedField<global::Node>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::Node> StructureResponse {
    get { return structureResponse_; }
  }

  /// <summary>Field number for the "getter_request" field.</summary>
  public const int GetterRequestFieldNumber = 5;
  private static readonly pb::FieldCodec<global::ValueRequest> _repeated_getterRequest_codec
      = pb::FieldCodec.ForMessage(42, global::ValueRequest.Parser);
  private readonly pbc::RepeatedField<global::ValueRequest> getterRequest_ = new pbc::RepeatedField<global::ValueRequest>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::ValueRequest> GetterRequest {
    get { return getterRequest_; }
  }

  /// <summary>Field number for the "getter_response" field.</summary>
  public const int GetterResponseFieldNumber = 6;
  private static readonly pb::FieldCodec<global::VariantValue> _repeated_getterResponse_codec
      = pb::FieldCodec.ForMessage(50, global::VariantValue.Parser);
  private readonly pbc::RepeatedField<global::VariantValue> getterResponse_ = new pbc::RepeatedField<global::VariantValue>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::VariantValue> GetterResponse {
    get { return getterResponse_; }
  }

  /// <summary>Field number for the "setter_request" field.</summary>
  public const int SetterRequestFieldNumber = 7;
  private static readonly pb::FieldCodec<global::VariantValue> _repeated_setterRequest_codec
      = pb::FieldCodec.ForMessage(58, global::VariantValue.Parser);
  private readonly pbc::RepeatedField<global::VariantValue> setterRequest_ = new pbc::RepeatedField<global::VariantValue>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::VariantValue> SetterRequest {
    get { return setterRequest_; }
  }

  /// <summary>Field number for the "structure_change_response" field.</summary>
  public const int StructureChangeResponseFieldNumber = 8;
  private static readonly pb::FieldCodec<uint> _repeated_structureChangeResponse_codec
      = pb::FieldCodec.ForUInt32(64);
  private readonly pbc::RepeatedField<uint> structureChangeResponse_ = new pbc::RepeatedField<uint>();
  /// <summary>
  /// node ID's which need new structure requests
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> StructureChangeResponse {
    get { return structureChangeResponse_; }
  }

  /// <summary>Field number for the "current_time_response" field.</summary>
  public const int CurrentTimeResponseFieldNumber = 9;
  private readonly static ulong CurrentTimeResponseDefaultValue = 0UL;

  private ulong currentTimeResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong CurrentTimeResponse {
    get { if ((_hasBits0 & 2) != 0) { return currentTimeResponse_; } else { return CurrentTimeResponseDefaultValue; } }
    set {
      _hasBits0 |= 2;
      currentTimeResponse_ = value;
    }
  }
  /// <summary>Gets whether the "current_time_response" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCurrentTimeResponse {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "current_time_response" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCurrentTimeResponse() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "child_add_request" field.</summary>
  public const int ChildAddRequestFieldNumber = 10;
  private static readonly pb::FieldCodec<global::ChildAdd> _repeated_childAddRequest_codec
      = pb::FieldCodec.ForMessage(82, global::ChildAdd.Parser);
  private readonly pbc::RepeatedField<global::ChildAdd> childAddRequest_ = new pbc::RepeatedField<global::ChildAdd>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::ChildAdd> ChildAddRequest {
    get { return childAddRequest_; }
  }

  /// <summary>Field number for the "child_remove_request" field.</summary>
  public const int ChildRemoveRequestFieldNumber = 11;
  private static readonly pb::FieldCodec<global::ChildRemove> _repeated_childRemoveRequest_codec
      = pb::FieldCodec.ForMessage(90, global::ChildRemove.Parser);
  private readonly pbc::RepeatedField<global::ChildRemove> childRemoveRequest_ = new pbc::RepeatedField<global::ChildRemove>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::ChildRemove> ChildRemoveRequest {
    get { return childRemoveRequest_; }
  }

  /// <summary>Field number for the "re_auth_request" field.</summary>
  public const int ReAuthRequestFieldNumber = 12;
  private global::AuthRequest reAuthRequest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::AuthRequest ReAuthRequest {
    get { return reAuthRequest_; }
    set {
      reAuthRequest_ = value;
    }
  }

  /// <summary>Field number for the "re_auth_response" field.</summary>
  public const int ReAuthResponseFieldNumber = 13;
  private global::AuthResponse reAuthResponse_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::AuthResponse ReAuthResponse {
    get { return reAuthResponse_; }
    set {
      reAuthResponse_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Container);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Container other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MessageType != other.MessageType) return false;
    if (!object.Equals(Error, other.Error)) return false;
    if(!structureRequest_.Equals(other.structureRequest_)) return false;
    if(!structureResponse_.Equals(other.structureResponse_)) return false;
    if(!getterRequest_.Equals(other.getterRequest_)) return false;
    if(!getterResponse_.Equals(other.getterResponse_)) return false;
    if(!setterRequest_.Equals(other.setterRequest_)) return false;
    if(!structureChangeResponse_.Equals(other.structureChangeResponse_)) return false;
    if (CurrentTimeResponse != other.CurrentTimeResponse) return false;
    if(!childAddRequest_.Equals(other.childAddRequest_)) return false;
    if(!childRemoveRequest_.Equals(other.childRemoveRequest_)) return false;
    if (!object.Equals(ReAuthRequest, other.ReAuthRequest)) return false;
    if (!object.Equals(ReAuthResponse, other.ReAuthResponse)) return false;
    if (!Equals(_extensions, other._extensions)) {
      return false;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasMessageType) hash ^= MessageType.GetHashCode();
    if (error_ != null) hash ^= Error.GetHashCode();
    hash ^= structureRequest_.GetHashCode();
    hash ^= structureResponse_.GetHashCode();
    hash ^= getterRequest_.GetHashCode();
    hash ^= getterResponse_.GetHashCode();
    hash ^= setterRequest_.GetHashCode();
    hash ^= structureChangeResponse_.GetHashCode();
    if (HasCurrentTimeResponse) hash ^= CurrentTimeResponse.GetHashCode();
    hash ^= childAddRequest_.GetHashCode();
    hash ^= childRemoveRequest_.GetHashCode();
    if (reAuthRequest_ != null) hash ^= ReAuthRequest.GetHashCode();
    if (reAuthResponse_ != null) hash ^= ReAuthResponse.GetHashCode();
    if (_extensions != null) {
      hash ^= _extensions.GetHashCode();
    }
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasMessageType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) MessageType);
    }
    if (error_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Error);
    }
    structureRequest_.WriteTo(output, _repeated_structureRequest_codec);
    structureResponse_.WriteTo(output, _repeated_structureResponse_codec);
    getterRequest_.WriteTo(output, _repeated_getterRequest_codec);
    getterResponse_.WriteTo(output, _repeated_getterResponse_codec);
    setterRequest_.WriteTo(output, _repeated_setterRequest_codec);
    structureChangeResponse_.WriteTo(output, _repeated_structureChangeResponse_codec);
    if (HasCurrentTimeResponse) {
      output.WriteRawTag(72);
      output.WriteUInt64(CurrentTimeResponse);
    }
    childAddRequest_.WriteTo(output, _repeated_childAddRequest_codec);
    childRemoveRequest_.WriteTo(output, _repeated_childRemoveRequest_codec);
    if (reAuthRequest_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(ReAuthRequest);
    }
    if (reAuthResponse_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(ReAuthResponse);
    }
    if (_extensions != null) {
      _extensions.WriteTo(output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasMessageType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) MessageType);
    }
    if (error_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Error);
    }
    structureRequest_.WriteTo(ref output, _repeated_structureRequest_codec);
    structureResponse_.WriteTo(ref output, _repeated_structureResponse_codec);
    getterRequest_.WriteTo(ref output, _repeated_getterRequest_codec);
    getterResponse_.WriteTo(ref output, _repeated_getterResponse_codec);
    setterRequest_.WriteTo(ref output, _repeated_setterRequest_codec);
    structureChangeResponse_.WriteTo(ref output, _repeated_structureChangeResponse_codec);
    if (HasCurrentTimeResponse) {
      output.WriteRawTag(72);
      output.WriteUInt64(CurrentTimeResponse);
    }
    childAddRequest_.WriteTo(ref output, _repeated_childAddRequest_codec);
    childRemoveRequest_.WriteTo(ref output, _repeated_childRemoveRequest_codec);
    if (reAuthRequest_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(ReAuthRequest);
    }
    if (reAuthResponse_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(ReAuthResponse);
    }
    if (_extensions != null) {
      _extensions.WriteTo(ref output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasMessageType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageType);
    }
    if (error_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
    }
    size += structureRequest_.CalculateSize(_repeated_structureRequest_codec);
    size += structureResponse_.CalculateSize(_repeated_structureResponse_codec);
    size += getterRequest_.CalculateSize(_repeated_getterRequest_codec);
    size += getterResponse_.CalculateSize(_repeated_getterResponse_codec);
    size += setterRequest_.CalculateSize(_repeated_setterRequest_codec);
    size += structureChangeResponse_.CalculateSize(_repeated_structureChangeResponse_codec);
    if (HasCurrentTimeResponse) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CurrentTimeResponse);
    }
    size += childAddRequest_.CalculateSize(_repeated_childAddRequest_codec);
    size += childRemoveRequest_.CalculateSize(_repeated_childRemoveRequest_codec);
    if (reAuthRequest_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReAuthRequest);
    }
    if (reAuthResponse_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReAuthResponse);
    }
    if (_extensions != null) {
      size += _extensions.CalculateSize();
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Container other) {
    if (other == null) {
      return;
    }
    if (other.HasMessageType) {
      MessageType = other.MessageType;
    }
    if (other.error_ != null) {
      if (error_ == null) {
        Error = new global::Error();
      }
      Error.MergeFrom(other.Error);
    }
    structureRequest_.Add(other.structureRequest_);
    structureResponse_.Add(other.structureResponse_);
    getterRequest_.Add(other.getterRequest_);
    getterResponse_.Add(other.getterResponse_);
    setterRequest_.Add(other.setterRequest_);
    structureChangeResponse_.Add(other.structureChangeResponse_);
    if (other.HasCurrentTimeResponse) {
      CurrentTimeResponse = other.CurrentTimeResponse;
    }
    childAddRequest_.Add(other.childAddRequest_);
    childRemoveRequest_.Add(other.childRemoveRequest_);
    if (other.reAuthRequest_ != null) {
      if (reAuthRequest_ == null) {
        ReAuthRequest = new global::AuthRequest();
      }
      ReAuthRequest.MergeFrom(other.ReAuthRequest);
    }
    if (other.reAuthResponse_ != null) {
      if (reAuthResponse_ == null) {
        ReAuthResponse = new global::AuthResponse();
      }
      ReAuthResponse.MergeFrom(other.ReAuthResponse);
    }
    pb::ExtensionSet.MergeFrom(ref _extensions, other._extensions);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          }
          break;
        case 8: {
          MessageType = (global::Container.Types.Type) input.ReadEnum();
          break;
        }
        case 18: {
          if (error_ == null) {
            Error = new global::Error();
          }
          input.ReadMessage(Error);
          break;
        }
        case 26:
        case 24: {
          structureRequest_.AddEntriesFrom(input, _repeated_structureRequest_codec);
          break;
        }
        case 34: {
          structureResponse_.AddEntriesFrom(input, _repeated_structureResponse_codec);
          break;
        }
        case 42: {
          getterRequest_.AddEntriesFrom(input, _repeated_getterRequest_codec);
          break;
        }
        case 50: {
          getterResponse_.AddEntriesFrom(input, _repeated_getterResponse_codec);
          break;
        }
        case 58: {
          setterRequest_.AddEntriesFrom(input, _repeated_setterRequest_codec);
          break;
        }
        case 66:
        case 64: {
          structureChangeResponse_.AddEntriesFrom(input, _repeated_structureChangeResponse_codec);
          break;
        }
        case 72: {
          CurrentTimeResponse = input.ReadUInt64();
          break;
        }
        case 82: {
          childAddRequest_.AddEntriesFrom(input, _repeated_childAddRequest_codec);
          break;
        }
        case 90: {
          childRemoveRequest_.AddEntriesFrom(input, _repeated_childRemoveRequest_codec);
          break;
        }
        case 98: {
          if (reAuthRequest_ == null) {
            ReAuthRequest = new global::AuthRequest();
          }
          input.ReadMessage(ReAuthRequest);
          break;
        }
        case 106: {
          if (reAuthResponse_ == null) {
            ReAuthResponse = new global::AuthResponse();
          }
          input.ReadMessage(ReAuthResponse);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, ref input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          }
          break;
        case 8: {
          MessageType = (global::Container.Types.Type) input.ReadEnum();
          break;
        }
        case 18: {
          if (error_ == null) {
            Error = new global::Error();
          }
          input.ReadMessage(Error);
          break;
        }
        case 26:
        case 24: {
          structureRequest_.AddEntriesFrom(ref input, _repeated_structureRequest_codec);
          break;
        }
        case 34: {
          structureResponse_.AddEntriesFrom(ref input, _repeated_structureResponse_codec);
          break;
        }
        case 42: {
          getterRequest_.AddEntriesFrom(ref input, _repeated_getterRequest_codec);
          break;
        }
        case 50: {
          getterResponse_.AddEntriesFrom(ref input, _repeated_getterResponse_codec);
          break;
        }
        case 58: {
          setterRequest_.AddEntriesFrom(ref input, _repeated_setterRequest_codec);
          break;
        }
        case 66:
        case 64: {
          structureChangeResponse_.AddEntriesFrom(ref input, _repeated_structureChangeResponse_codec);
          break;
        }
        case 72: {
          CurrentTimeResponse = input.ReadUInt64();
          break;
        }
        case 82: {
          childAddRequest_.AddEntriesFrom(ref input, _repeated_childAddRequest_codec);
          break;
        }
        case 90: {
          childRemoveRequest_.AddEntriesFrom(ref input, _repeated_childRemoveRequest_codec);
          break;
        }
        case 98: {
          if (reAuthRequest_ == null) {
            ReAuthRequest = new global::AuthRequest();
          }
          input.ReadMessage(ReAuthRequest);
          break;
        }
        case 106: {
          if (reAuthResponse_ == null) {
            ReAuthResponse = new global::AuthResponse();
          }
          input.ReadMessage(ReAuthResponse);
          break;
        }
      }
    }
  }
  #endif

  public TValue GetExtension<TValue>(pb::Extension<Container, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetExtension<TValue>(pb::RepeatedExtension<Container, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetOrInitializeExtension<TValue>(pb::RepeatedExtension<Container, TValue> extension) {
    return pb::ExtensionSet.GetOrInitialize(ref _extensions, extension);
  }
  public void SetExtension<TValue>(pb::Extension<Container, TValue> extension, TValue value) {
    pb::ExtensionSet.Set(ref _extensions, extension, value);
  }
  public bool HasExtension<TValue>(pb::Extension<Container, TValue> extension) {
    return pb::ExtensionSet.Has(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::Extension<Container, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::RepeatedExtension<Container, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }

  #region Nested types
  /// <summary>Container for nested types declared in the Container message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum Type {
      [pbr::OriginalName("eRemoteError")] ERemoteError = 0,
      [pbr::OriginalName("eStructureRequest")] EStructureRequest = 1,
      [pbr::OriginalName("eStructureResponse")] EStructureResponse = 2,
      [pbr::OriginalName("eGetterRequest")] EGetterRequest = 3,
      [pbr::OriginalName("eGetterResponse")] EGetterResponse = 4,
      [pbr::OriginalName("eSetterRequest")] ESetterRequest = 5,
      [pbr::OriginalName("eStructureChangeResponse")] EStructureChangeResponse = 6,
      [pbr::OriginalName("eCurrentTimeRequest")] ECurrentTimeRequest = 7,
      [pbr::OriginalName("eCurrentTimeResponse")] ECurrentTimeResponse = 8,
      [pbr::OriginalName("eChildAddRequest")] EChildAddRequest = 9,
      [pbr::OriginalName("eChildRemoveRequest")] EChildRemoveRequest = 10,
      [pbr::OriginalName("eReauthRequest")] EReauthRequest = 11,
      [pbr::OriginalName("eReauthResponse")] EReauthResponse = 12,
      [pbr::OriginalName("eActivityNotification")] EActivityNotification = 13,
    }

  }
  #endregion

}

/// <summary>
///* Error message type. 
/// </summary>
public sealed partial class Error : pb::IExtendableMessage<Error>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
  private pb::UnknownFieldSet _unknownFields;
  private pb::ExtensionSet<Error> _extensions;
  private pb::ExtensionSet<Error> _Extensions { get { return _extensions; } }
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Error> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StudioReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Error() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Error(Error other) : this() {
    _hasBits0 = other._hasBits0;
    code_ = other.code_;
    text_ = other.text_;
    nodeId_ = other.nodeId_;
    parameter_ = other.parameter_;
    challenge_ = other.challenge_;
    idleLockoutPeriod_ = other.idleLockoutPeriod_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    _extensions = pb::ExtensionSet.Clone(other._extensions);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Error Clone() {
    return new Error(this);
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 1;
  private readonly static uint CodeDefaultValue = 0;

  private uint code_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Code {
    get { if ((_hasBits0 & 1) != 0) { return code_; } else { return CodeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      code_ = value;
    }
  }
  /// <summary>Gets whether the "code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCode {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCode() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "text" field.</summary>
  public const int TextFieldNumber = 2;
  private readonly static string TextDefaultValue = "";

  private string text_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Text {
    get { return text_ ?? TextDefaultValue; }
    set {
      text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "text" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasText {
    get { return text_ != null; }
  }
  /// <summary>Clears the value of the "text" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearText() {
    text_ = null;
  }

  /// <summary>Field number for the "node_id" field.</summary>
  public const int NodeIdFieldNumber = 3;
  private readonly static uint NodeIdDefaultValue = 0;

  private uint nodeId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint NodeId {
    get { if ((_hasBits0 & 2) != 0) { return nodeId_; } else { return NodeIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      nodeId_ = value;
    }
  }
  /// <summary>Gets whether the "node_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNodeId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "node_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNodeId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "parameter" field.</summary>
  public const int ParameterFieldNumber = 4;
  private readonly static string ParameterDefaultValue = "";

  private string parameter_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Parameter {
    get { return parameter_ ?? ParameterDefaultValue; }
    set {
      parameter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "parameter" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasParameter {
    get { return parameter_ != null; }
  }
  /// <summary>Clears the value of the "parameter" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearParameter() {
    parameter_ = null;
  }

  /// <summary>Field number for the "challenge" field.</summary>
  public const int ChallengeFieldNumber = 5;
  private readonly static pb::ByteString ChallengeDefaultValue = pb::ByteString.Empty;

  private pb::ByteString challenge_;
  /// <summary>
  /// new challenge for re-authentication, used with code = eAUTH_RESPONSE_EXPIRED
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Challenge {
    get { return challenge_ ?? ChallengeDefaultValue; }
    set {
      challenge_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "challenge" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasChallenge {
    get { return challenge_ != null; }
  }
  /// <summary>Clears the value of the "challenge" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearChallenge() {
    challenge_ = null;
  }

  /// <summary>Field number for the "idle_lockout_period" field.</summary>
  public const int IdleLockoutPeriodFieldNumber = 6;
  private readonly static uint IdleLockoutPeriodDefaultValue = 0;

  private uint idleLockoutPeriod_;
  /// <summary>
  /// updated value for idle lockout period, used with code = eAUTH_RESPONSE_EXPIRED
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint IdleLockoutPeriod {
    get { if ((_hasBits0 & 4) != 0) { return idleLockoutPeriod_; } else { return IdleLockoutPeriodDefaultValue; } }
    set {
      _hasBits0 |= 4;
      idleLockoutPeriod_ = value;
    }
  }
  /// <summary>Gets whether the "idle_lockout_period" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIdleLockoutPeriod {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "idle_lockout_period" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIdleLockoutPeriod() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Error);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Error other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Code != other.Code) return false;
    if (Text != other.Text) return false;
    if (NodeId != other.NodeId) return false;
    if (Parameter != other.Parameter) return false;
    if (Challenge != other.Challenge) return false;
    if (IdleLockoutPeriod != other.IdleLockoutPeriod) return false;
    if (!Equals(_extensions, other._extensions)) {
      return false;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCode) hash ^= Code.GetHashCode();
    if (HasText) hash ^= Text.GetHashCode();
    if (HasNodeId) hash ^= NodeId.GetHashCode();
    if (HasParameter) hash ^= Parameter.GetHashCode();
    if (HasChallenge) hash ^= Challenge.GetHashCode();
    if (HasIdleLockoutPeriod) hash ^= IdleLockoutPeriod.GetHashCode();
    if (_extensions != null) {
      hash ^= _extensions.GetHashCode();
    }
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCode) {
      output.WriteRawTag(8);
      output.WriteUInt32(Code);
    }
    if (HasText) {
      output.WriteRawTag(18);
      output.WriteString(Text);
    }
    if (HasNodeId) {
      output.WriteRawTag(24);
      output.WriteUInt32(NodeId);
    }
    if (HasParameter) {
      output.WriteRawTag(34);
      output.WriteString(Parameter);
    }
    if (HasChallenge) {
      output.WriteRawTag(42);
      output.WriteBytes(Challenge);
    }
    if (HasIdleLockoutPeriod) {
      output.WriteRawTag(48);
      output.WriteUInt32(IdleLockoutPeriod);
    }
    if (_extensions != null) {
      _extensions.WriteTo(output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCode) {
      output.WriteRawTag(8);
      output.WriteUInt32(Code);
    }
    if (HasText) {
      output.WriteRawTag(18);
      output.WriteString(Text);
    }
    if (HasNodeId) {
      output.WriteRawTag(24);
      output.WriteUInt32(NodeId);
    }
    if (HasParameter) {
      output.WriteRawTag(34);
      output.WriteString(Parameter);
    }
    if (HasChallenge) {
      output.WriteRawTag(42);
      output.WriteBytes(Challenge);
    }
    if (HasIdleLockoutPeriod) {
      output.WriteRawTag(48);
      output.WriteUInt32(IdleLockoutPeriod);
    }
    if (_extensions != null) {
      _extensions.WriteTo(ref output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCode) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Code);
    }
    if (HasText) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
    }
    if (HasNodeId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NodeId);
    }
    if (HasParameter) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Parameter);
    }
    if (HasChallenge) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Challenge);
    }
    if (HasIdleLockoutPeriod) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IdleLockoutPeriod);
    }
    if (_extensions != null) {
      size += _extensions.CalculateSize();
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Error other) {
    if (other == null) {
      return;
    }
    if (other.HasCode) {
      Code = other.Code;
    }
    if (other.HasText) {
      Text = other.Text;
    }
    if (other.HasNodeId) {
      NodeId = other.NodeId;
    }
    if (other.HasParameter) {
      Parameter = other.Parameter;
    }
    if (other.HasChallenge) {
      Challenge = other.Challenge;
    }
    if (other.HasIdleLockoutPeriod) {
      IdleLockoutPeriod = other.IdleLockoutPeriod;
    }
    pb::ExtensionSet.MergeFrom(ref _extensions, other._extensions);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          }
          break;
        case 8: {
          Code = input.ReadUInt32();
          break;
        }
        case 18: {
          Text = input.ReadString();
          break;
        }
        case 24: {
          NodeId = input.ReadUInt32();
          break;
        }
        case 34: {
          Parameter = input.ReadString();
          break;
        }
        case 42: {
          Challenge = input.ReadBytes();
          break;
        }
        case 48: {
          IdleLockoutPeriod = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, ref input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          }
          break;
        case 8: {
          Code = input.ReadUInt32();
          break;
        }
        case 18: {
          Text = input.ReadString();
          break;
        }
        case 24: {
          NodeId = input.ReadUInt32();
          break;
        }
        case 34: {
          Parameter = input.ReadString();
          break;
        }
        case 42: {
          Challenge = input.ReadBytes();
          break;
        }
        case 48: {
          IdleLockoutPeriod = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

  public TValue GetExtension<TValue>(pb::Extension<Error, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetExtension<TValue>(pb::RepeatedExtension<Error, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetOrInitializeExtension<TValue>(pb::RepeatedExtension<Error, TValue> extension) {
    return pb::ExtensionSet.GetOrInitialize(ref _extensions, extension);
  }
  public void SetExtension<TValue>(pb::Extension<Error, TValue> extension, TValue value) {
    pb::ExtensionSet.Set(ref _extensions, extension, value);
  }
  public bool HasExtension<TValue>(pb::Extension<Error, TValue> extension) {
    return pb::ExtensionSet.Has(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::Extension<Error, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::RepeatedExtension<Error, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }

}

/// <summary>
///* A single CDPNode property container. 
/// </summary>
public sealed partial class Info : pb::IExtendableMessage<Info>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Info> _parser = new pb::MessageParser<Info>(() => new Info());
  private pb::UnknownFieldSet _unknownFields;
  private pb::ExtensionSet<Info> _extensions;
  private pb::ExtensionSet<Info> _Extensions { get { return _extensions; } }
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Info> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StudioReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Info() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Info(Info other) : this() {
    _hasBits0 = other._hasBits0;
    nodeId_ = other.nodeId_;
    name_ = other.name_;
    nodeType_ = other.nodeType_;
    valueType_ = other.valueType_;
    typeName_ = other.typeName_;
    serverAddr_ = other.serverAddr_;
    serverPort_ = other.serverPort_;
    isLocal_ = other.isLocal_;
    flags_ = other.flags_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    _extensions = pb::ExtensionSet.Clone(other._extensions);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Info Clone() {
    return new Info(this);
  }

  /// <summary>Field number for the "node_id" field.</summary>
  public const int NodeIdFieldNumber = 1;
  private readonly static uint NodeIdDefaultValue = 0;

  private uint nodeId_;
  /// <summary>
  /// Application wide unique ID for each instance in CDP structure
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint NodeId {
    get { if ((_hasBits0 & 1) != 0) { return nodeId_; } else { return NodeIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      nodeId_ = value;
    }
  }
  /// <summary>Gets whether the "node_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNodeId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "node_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNodeId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 2;
  private readonly static string NameDefaultValue = "";

  private string name_;
  /// <summary>
  /// Local short name
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearName() {
    name_ = null;
  }

  /// <summary>Field number for the "node_type" field.</summary>
  public const int NodeTypeFieldNumber = 3;
  private readonly static global::CDPNodeType NodeTypeDefaultValue = global::CDPNodeType.CdpUndefined;

  private global::CDPNodeType nodeType_;
  /// <summary>
  /// Direct base type, type of the class
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CDPNodeType NodeType {
    get { if ((_hasBits0 & 2) != 0) { return nodeType_; } else { return NodeTypeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      nodeType_ = value;
    }
  }
  /// <summary>Gets whether the "node_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNodeType {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "node_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNodeType() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "value_type" field.</summary>
  public const int ValueTypeFieldNumber = 4;
  private readonly static global::CDPValueType ValueTypeDefaultValue = global::CDPValueType.EUndefined;

  private global::CDPValueType valueType_;
  /// <summary>
  /// Value primitive type the node holds if node may hold a value
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CDPValueType ValueType {
    get { if ((_hasBits0 & 4) != 0) { return valueType_; } else { return ValueTypeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      valueType_ = value;
    }
  }
  /// <summary>Gets whether the "value_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasValueType {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "value_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearValueType() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "type_name" field.</summary>
  public const int TypeNameFieldNumber = 5;
  private readonly static string TypeNameDefaultValue = "";

  private string typeName_;
  /// <summary>
  /// Real class name
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string TypeName {
    get { return typeName_ ?? TypeNameDefaultValue; }
    set {
      typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "type_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTypeName {
    get { return typeName_ != null; }
  }
  /// <summary>Clears the value of the "type_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTypeName() {
    typeName_ = null;
  }

  /// <summary>Field number for the "server_addr" field.</summary>
  public const int ServerAddrFieldNumber = 6;
  private readonly static string ServerAddrDefaultValue = "";

  private string serverAddr_;
  /// <summary>
  /// If this node signifies another CDP application,
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ServerAddr {
    get { return serverAddr_ ?? ServerAddrDefaultValue; }
    set {
      serverAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "server_addr" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerAddr {
    get { return serverAddr_ != null; }
  }
  /// <summary>Clears the value of the "server_addr" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerAddr() {
    serverAddr_ = null;
  }

  /// <summary>Field number for the "server_port" field.</summary>
  public const int ServerPortFieldNumber = 7;
  private readonly static uint ServerPortDefaultValue = 0;

  private uint serverPort_;
  /// <summary>
  /// this field will be the IP of said application's StudioAPIServer
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServerPort {
    get { if ((_hasBits0 & 8) != 0) { return serverPort_; } else { return ServerPortDefaultValue; } }
    set {
      _hasBits0 |= 8;
      serverPort_ = value;
    }
  }
  /// <summary>Gets whether the "server_port" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerPort {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "server_port" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerPort() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "is_local" field.</summary>
  public const int IsLocalFieldNumber = 8;
  private readonly static bool IsLocalDefaultValue = false;

  private bool isLocal_;
  /// <summary>
  /// if multiple applications are sent back from the server,
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsLocal {
    get { if ((_hasBits0 & 16) != 0) { return isLocal_; } else { return IsLocalDefaultValue; } }
    set {
      _hasBits0 |= 16;
      isLocal_ = value;
    }
  }
  /// <summary>Gets whether the "is_local" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsLocal {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "is_local" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsLocal() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "flags" field.</summary>
  public const int FlagsFieldNumber = 9;
  private readonly static uint FlagsDefaultValue = 0;

  private uint flags_;
  /// <summary>
  /// this flag is set to true for the app that the data was requested from
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Flags {
    get { if ((_hasBits0 & 32) != 0) { return flags_; } else { return FlagsDefaultValue; } }
    set {
      _hasBits0 |= 32;
      flags_ = value;
    }
  }
  /// <summary>Gets whether the "flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFlags {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFlags() {
    _hasBits0 &= ~32;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Info);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Info other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (NodeId != other.NodeId) return false;
    if (Name != other.Name) return false;
    if (NodeType != other.NodeType) return false;
    if (ValueType != other.ValueType) return false;
    if (TypeName != other.TypeName) return false;
    if (ServerAddr != other.ServerAddr) return false;
    if (ServerPort != other.ServerPort) return false;
    if (IsLocal != other.IsLocal) return false;
    if (Flags != other.Flags) return false;
    if (!Equals(_extensions, other._extensions)) {
      return false;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasNodeId) hash ^= NodeId.GetHashCode();
    if (HasName) hash ^= Name.GetHashCode();
    if (HasNodeType) hash ^= NodeType.GetHashCode();
    if (HasValueType) hash ^= ValueType.GetHashCode();
    if (HasTypeName) hash ^= TypeName.GetHashCode();
    if (HasServerAddr) hash ^= ServerAddr.GetHashCode();
    if (HasServerPort) hash ^= ServerPort.GetHashCode();
    if (HasIsLocal) hash ^= IsLocal.GetHashCode();
    if (HasFlags) hash ^= Flags.GetHashCode();
    if (_extensions != null) {
      hash ^= _extensions.GetHashCode();
    }
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasNodeId) {
      output.WriteRawTag(8);
      output.WriteUInt32(NodeId);
    }
    if (HasName) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (HasNodeType) {
      output.WriteRawTag(24);
      output.WriteEnum((int) NodeType);
    }
    if (HasValueType) {
      output.WriteRawTag(32);
      output.WriteEnum((int) ValueType);
    }
    if (HasTypeName) {
      output.WriteRawTag(42);
      output.WriteString(TypeName);
    }
    if (HasServerAddr) {
      output.WriteRawTag(50);
      output.WriteString(ServerAddr);
    }
    if (HasServerPort) {
      output.WriteRawTag(56);
      output.WriteUInt32(ServerPort);
    }
    if (HasIsLocal) {
      output.WriteRawTag(64);
      output.WriteBool(IsLocal);
    }
    if (HasFlags) {
      output.WriteRawTag(72);
      output.WriteUInt32(Flags);
    }
    if (_extensions != null) {
      _extensions.WriteTo(output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasNodeId) {
      output.WriteRawTag(8);
      output.WriteUInt32(NodeId);
    }
    if (HasName) {
      output.WriteRawTag(18);
      output.WriteString(Name);
    }
    if (HasNodeType) {
      output.WriteRawTag(24);
      output.WriteEnum((int) NodeType);
    }
    if (HasValueType) {
      output.WriteRawTag(32);
      output.WriteEnum((int) ValueType);
    }
    if (HasTypeName) {
      output.WriteRawTag(42);
      output.WriteString(TypeName);
    }
    if (HasServerAddr) {
      output.WriteRawTag(50);
      output.WriteString(ServerAddr);
    }
    if (HasServerPort) {
      output.WriteRawTag(56);
      output.WriteUInt32(ServerPort);
    }
    if (HasIsLocal) {
      output.WriteRawTag(64);
      output.WriteBool(IsLocal);
    }
    if (HasFlags) {
      output.WriteRawTag(72);
      output.WriteUInt32(Flags);
    }
    if (_extensions != null) {
      _extensions.WriteTo(ref output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasNodeId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NodeId);
    }
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (HasNodeType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NodeType);
    }
    if (HasValueType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValueType);
    }
    if (HasTypeName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
    }
    if (HasServerAddr) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerAddr);
    }
    if (HasServerPort) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerPort);
    }
    if (HasIsLocal) {
      size += 1 + 1;
    }
    if (HasFlags) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
    }
    if (_extensions != null) {
      size += _extensions.CalculateSize();
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Info other) {
    if (other == null) {
      return;
    }
    if (other.HasNodeId) {
      NodeId = other.NodeId;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    if (other.HasNodeType) {
      NodeType = other.NodeType;
    }
    if (other.HasValueType) {
      ValueType = other.ValueType;
    }
    if (other.HasTypeName) {
      TypeName = other.TypeName;
    }
    if (other.HasServerAddr) {
      ServerAddr = other.ServerAddr;
    }
    if (other.HasServerPort) {
      ServerPort = other.ServerPort;
    }
    if (other.HasIsLocal) {
      IsLocal = other.IsLocal;
    }
    if (other.HasFlags) {
      Flags = other.Flags;
    }
    pb::ExtensionSet.MergeFrom(ref _extensions, other._extensions);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          }
          break;
        case 8: {
          NodeId = input.ReadUInt32();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 24: {
          NodeType = (global::CDPNodeType) input.ReadEnum();
          break;
        }
        case 32: {
          ValueType = (global::CDPValueType) input.ReadEnum();
          break;
        }
        case 42: {
          TypeName = input.ReadString();
          break;
        }
        case 50: {
          ServerAddr = input.ReadString();
          break;
        }
        case 56: {
          ServerPort = input.ReadUInt32();
          break;
        }
        case 64: {
          IsLocal = input.ReadBool();
          break;
        }
        case 72: {
          Flags = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, ref input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          }
          break;
        case 8: {
          NodeId = input.ReadUInt32();
          break;
        }
        case 18: {
          Name = input.ReadString();
          break;
        }
        case 24: {
          NodeType = (global::CDPNodeType) input.ReadEnum();
          break;
        }
        case 32: {
          ValueType = (global::CDPValueType) input.ReadEnum();
          break;
        }
        case 42: {
          TypeName = input.ReadString();
          break;
        }
        case 50: {
          ServerAddr = input.ReadString();
          break;
        }
        case 56: {
          ServerPort = input.ReadUInt32();
          break;
        }
        case 64: {
          IsLocal = input.ReadBool();
          break;
        }
        case 72: {
          Flags = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

  public TValue GetExtension<TValue>(pb::Extension<Info, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetExtension<TValue>(pb::RepeatedExtension<Info, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetOrInitializeExtension<TValue>(pb::RepeatedExtension<Info, TValue> extension) {
    return pb::ExtensionSet.GetOrInitialize(ref _extensions, extension);
  }
  public void SetExtension<TValue>(pb::Extension<Info, TValue> extension, TValue value) {
    pb::ExtensionSet.Set(ref _extensions, extension, value);
  }
  public bool HasExtension<TValue>(pb::Extension<Info, TValue> extension) {
    return pb::ExtensionSet.Has(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::Extension<Info, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::RepeatedExtension<Info, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }

  #region Nested types
  /// <summary>Container for nested types declared in the Info message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum Flags {
      [pbr::OriginalName("eNone")] ENone = 0,
      [pbr::OriginalName("eNodeIsLeaf")] ENodeIsLeaf = 1,
      [pbr::OriginalName("eValueIsPersistent")] EValueIsPersistent = 2,
      [pbr::OriginalName("eValueIsReadOnly")] EValueIsReadOnly = 4,
      [pbr::OriginalName("eNodeIsRemovable")] ENodeIsRemovable = 8,
      [pbr::OriginalName("eNodeCanAddChildren")] ENodeCanAddChildren = 16,
      [pbr::OriginalName("eNodeIsRenamable")] ENodeIsRenamable = 32,
      [pbr::OriginalName("eNodeIsInternal")] ENodeIsInternal = 64,
      [pbr::OriginalName("eNodeIsImportant")] ENodeIsImportant = 128,
    }

  }
  #endregion

}

/// <summary>
///* CDP structure response data structure, a tree of Info properties. 
/// </summary>
public sealed partial class Node : pb::IExtendableMessage<Node>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Node> _parser = new pb::MessageParser<Node>(() => new Node());
  private pb::UnknownFieldSet _unknownFields;
  private pb::ExtensionSet<Node> _extensions;
  private pb::ExtensionSet<Node> _Extensions { get { return _extensions; } }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<Node> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StudioReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Node() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Node(Node other) : this() {
    info_ = other.info_ != null ? other.info_.Clone() : null;
    node_ = other.node_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    _extensions = pb::ExtensionSet.Clone(other._extensions);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public Node Clone() {
    return new Node(this);
  }

  /// <summary>Field number for the "info" field.</summary>
  public const int InfoFieldNumber = 1;
  private global::Info info_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::Info Info {
    get { return info_; }
    set {
      info_ = value;
    }
  }

  /// <summary>Field number for the "node" field.</summary>
  public const int Node_FieldNumber = 2;
  private static readonly pb::FieldCodec<global::Node> _repeated_node_codec
      = pb::FieldCodec.ForMessage(18, global::Node.Parser);
  private readonly pbc::RepeatedField<global::Node> node_ = new pbc::RepeatedField<global::Node>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::Node> Node_ {
    get { return node_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as Node);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(Node other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Info, other.Info)) return false;
    if(!node_.Equals(other.node_)) return false;
    if (!Equals(_extensions, other._extensions)) {
      return false;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (info_ != null) hash ^= Info.GetHashCode();
    hash ^= node_.GetHashCode();
    if (_extensions != null) {
      hash ^= _extensions.GetHashCode();
    }
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (info_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Info);
    }
    node_.WriteTo(output, _repeated_node_codec);
    if (_extensions != null) {
      _extensions.WriteTo(output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (info_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Info);
    }
    node_.WriteTo(ref output, _repeated_node_codec);
    if (_extensions != null) {
      _extensions.WriteTo(ref output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (info_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
    }
    size += node_.CalculateSize(_repeated_node_codec);
    if (_extensions != null) {
      size += _extensions.CalculateSize();
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(Node other) {
    if (other == null) {
      return;
    }
    if (other.info_ != null) {
      if (info_ == null) {
        Info = new global::Info();
      }
      Info.MergeFrom(other.Info);
    }
    node_.Add(other.node_);
    pb::ExtensionSet.MergeFrom(ref _extensions, other._extensions);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          }
          break;
        case 10: {
          if (info_ == null) {
            Info = new global::Info();
          }
          input.ReadMessage(Info);
          break;
        }
        case 18: {
          node_.AddEntriesFrom(input, _repeated_node_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, ref input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          }
          break;
        case 10: {
          if (info_ == null) {
            Info = new global::Info();
          }
          input.ReadMessage(Info);
          break;
        }
        case 18: {
          node_.AddEntriesFrom(ref input, _repeated_node_codec);
          break;
        }
      }
    }
  }
  #endif

  public TValue GetExtension<TValue>(pb::Extension<Node, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetExtension<TValue>(pb::RepeatedExtension<Node, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetOrInitializeExtension<TValue>(pb::RepeatedExtension<Node, TValue> extension) {
    return pb::ExtensionSet.GetOrInitialize(ref _extensions, extension);
  }
  public void SetExtension<TValue>(pb::Extension<Node, TValue> extension, TValue value) {
    pb::ExtensionSet.Set(ref _extensions, extension, value);
  }
  public bool HasExtension<TValue>(pb::Extension<Node, TValue> extension) {
    return pb::ExtensionSet.Has(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::Extension<Node, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::RepeatedExtension<Node, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }

}

/// <summary>
///* ChildAdd Request input structure 
/// </summary>
public sealed partial class ChildAdd : pb::IExtendableMessage<ChildAdd>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ChildAdd> _parser = new pb::MessageParser<ChildAdd>(() => new ChildAdd());
  private pb::UnknownFieldSet _unknownFields;
  private pb::ExtensionSet<ChildAdd> _extensions;
  private pb::ExtensionSet<ChildAdd> _Extensions { get { return _extensions; } }
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ChildAdd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StudioReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ChildAdd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ChildAdd(ChildAdd other) : this() {
    _hasBits0 = other._hasBits0;
    parentNodeId_ = other.parentNodeId_;
    childName_ = other.childName_;
    childTypeName_ = other.childTypeName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    _extensions = pb::ExtensionSet.Clone(other._extensions);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ChildAdd Clone() {
    return new ChildAdd(this);
  }

  /// <summary>Field number for the "parent_node_id" field.</summary>
  public const int ParentNodeIdFieldNumber = 1;
  private readonly static uint ParentNodeIdDefaultValue = 0;

  private uint parentNodeId_;
  /// <summary>
  /// parent to add the node into
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ParentNodeId {
    get { if ((_hasBits0 & 1) != 0) { return parentNodeId_; } else { return ParentNodeIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      parentNodeId_ = value;
    }
  }
  /// <summary>Gets whether the "parent_node_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasParentNodeId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "parent_node_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearParentNodeId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "child_name" field.</summary>
  public const int ChildNameFieldNumber = 2;
  private readonly static string ChildNameDefaultValue = "";

  private string childName_;
  /// <summary>
  /// child name to be added
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ChildName {
    get { return childName_ ?? ChildNameDefaultValue; }
    set {
      childName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "child_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasChildName {
    get { return childName_ != null; }
  }
  /// <summary>Clears the value of the "child_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearChildName() {
    childName_ = null;
  }

  /// <summary>Field number for the "child_type_name" field.</summary>
  public const int ChildTypeNameFieldNumber = 3;
  private readonly static string ChildTypeNameDefaultValue = "";

  private string childTypeName_;
  /// <summary>
  /// child class name
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ChildTypeName {
    get { return childTypeName_ ?? ChildTypeNameDefaultValue; }
    set {
      childTypeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "child_type_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasChildTypeName {
    get { return childTypeName_ != null; }
  }
  /// <summary>Clears the value of the "child_type_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearChildTypeName() {
    childTypeName_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ChildAdd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ChildAdd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ParentNodeId != other.ParentNodeId) return false;
    if (ChildName != other.ChildName) return false;
    if (ChildTypeName != other.ChildTypeName) return false;
    if (!Equals(_extensions, other._extensions)) {
      return false;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasParentNodeId) hash ^= ParentNodeId.GetHashCode();
    if (HasChildName) hash ^= ChildName.GetHashCode();
    if (HasChildTypeName) hash ^= ChildTypeName.GetHashCode();
    if (_extensions != null) {
      hash ^= _extensions.GetHashCode();
    }
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasParentNodeId) {
      output.WriteRawTag(8);
      output.WriteUInt32(ParentNodeId);
    }
    if (HasChildName) {
      output.WriteRawTag(18);
      output.WriteString(ChildName);
    }
    if (HasChildTypeName) {
      output.WriteRawTag(26);
      output.WriteString(ChildTypeName);
    }
    if (_extensions != null) {
      _extensions.WriteTo(output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasParentNodeId) {
      output.WriteRawTag(8);
      output.WriteUInt32(ParentNodeId);
    }
    if (HasChildName) {
      output.WriteRawTag(18);
      output.WriteString(ChildName);
    }
    if (HasChildTypeName) {
      output.WriteRawTag(26);
      output.WriteString(ChildTypeName);
    }
    if (_extensions != null) {
      _extensions.WriteTo(ref output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasParentNodeId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ParentNodeId);
    }
    if (HasChildName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildName);
    }
    if (HasChildTypeName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildTypeName);
    }
    if (_extensions != null) {
      size += _extensions.CalculateSize();
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ChildAdd other) {
    if (other == null) {
      return;
    }
    if (other.HasParentNodeId) {
      ParentNodeId = other.ParentNodeId;
    }
    if (other.HasChildName) {
      ChildName = other.ChildName;
    }
    if (other.HasChildTypeName) {
      ChildTypeName = other.ChildTypeName;
    }
    pb::ExtensionSet.MergeFrom(ref _extensions, other._extensions);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          }
          break;
        case 8: {
          ParentNodeId = input.ReadUInt32();
          break;
        }
        case 18: {
          ChildName = input.ReadString();
          break;
        }
        case 26: {
          ChildTypeName = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, ref input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          }
          break;
        case 8: {
          ParentNodeId = input.ReadUInt32();
          break;
        }
        case 18: {
          ChildName = input.ReadString();
          break;
        }
        case 26: {
          ChildTypeName = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

  public TValue GetExtension<TValue>(pb::Extension<ChildAdd, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetExtension<TValue>(pb::RepeatedExtension<ChildAdd, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetOrInitializeExtension<TValue>(pb::RepeatedExtension<ChildAdd, TValue> extension) {
    return pb::ExtensionSet.GetOrInitialize(ref _extensions, extension);
  }
  public void SetExtension<TValue>(pb::Extension<ChildAdd, TValue> extension, TValue value) {
    pb::ExtensionSet.Set(ref _extensions, extension, value);
  }
  public bool HasExtension<TValue>(pb::Extension<ChildAdd, TValue> extension) {
    return pb::ExtensionSet.Has(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::Extension<ChildAdd, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::RepeatedExtension<ChildAdd, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }

}

/// <summary>
///* ChildRemove Request input structure 
/// </summary>
public sealed partial class ChildRemove : pb::IExtendableMessage<ChildRemove>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ChildRemove> _parser = new pb::MessageParser<ChildRemove>(() => new ChildRemove());
  private pb::UnknownFieldSet _unknownFields;
  private pb::ExtensionSet<ChildRemove> _extensions;
  private pb::ExtensionSet<ChildRemove> _Extensions { get { return _extensions; } }
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ChildRemove> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StudioReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ChildRemove() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ChildRemove(ChildRemove other) : this() {
    _hasBits0 = other._hasBits0;
    parentNodeId_ = other.parentNodeId_;
    childName_ = other.childName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    _extensions = pb::ExtensionSet.Clone(other._extensions);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ChildRemove Clone() {
    return new ChildRemove(this);
  }

  /// <summary>Field number for the "parent_node_id" field.</summary>
  public const int ParentNodeIdFieldNumber = 1;
  private readonly static uint ParentNodeIdDefaultValue = 0;

  private uint parentNodeId_;
  /// <summary>
  /// parent to remove the node from
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ParentNodeId {
    get { if ((_hasBits0 & 1) != 0) { return parentNodeId_; } else { return ParentNodeIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      parentNodeId_ = value;
    }
  }
  /// <summary>Gets whether the "parent_node_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasParentNodeId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "parent_node_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearParentNodeId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "child_name" field.</summary>
  public const int ChildNameFieldNumber = 2;
  private readonly static string ChildNameDefaultValue = "";

  private string childName_;
  /// <summary>
  /// child to be removed
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ChildName {
    get { return childName_ ?? ChildNameDefaultValue; }
    set {
      childName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "child_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasChildName {
    get { return childName_ != null; }
  }
  /// <summary>Clears the value of the "child_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearChildName() {
    childName_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ChildRemove);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ChildRemove other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ParentNodeId != other.ParentNodeId) return false;
    if (ChildName != other.ChildName) return false;
    if (!Equals(_extensions, other._extensions)) {
      return false;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasParentNodeId) hash ^= ParentNodeId.GetHashCode();
    if (HasChildName) hash ^= ChildName.GetHashCode();
    if (_extensions != null) {
      hash ^= _extensions.GetHashCode();
    }
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasParentNodeId) {
      output.WriteRawTag(8);
      output.WriteUInt32(ParentNodeId);
    }
    if (HasChildName) {
      output.WriteRawTag(18);
      output.WriteString(ChildName);
    }
    if (_extensions != null) {
      _extensions.WriteTo(output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasParentNodeId) {
      output.WriteRawTag(8);
      output.WriteUInt32(ParentNodeId);
    }
    if (HasChildName) {
      output.WriteRawTag(18);
      output.WriteString(ChildName);
    }
    if (_extensions != null) {
      _extensions.WriteTo(ref output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasParentNodeId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ParentNodeId);
    }
    if (HasChildName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildName);
    }
    if (_extensions != null) {
      size += _extensions.CalculateSize();
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ChildRemove other) {
    if (other == null) {
      return;
    }
    if (other.HasParentNodeId) {
      ParentNodeId = other.ParentNodeId;
    }
    if (other.HasChildName) {
      ChildName = other.ChildName;
    }
    pb::ExtensionSet.MergeFrom(ref _extensions, other._extensions);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          }
          break;
        case 8: {
          ParentNodeId = input.ReadUInt32();
          break;
        }
        case 18: {
          ChildName = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, ref input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          }
          break;
        case 8: {
          ParentNodeId = input.ReadUInt32();
          break;
        }
        case 18: {
          ChildName = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

  public TValue GetExtension<TValue>(pb::Extension<ChildRemove, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetExtension<TValue>(pb::RepeatedExtension<ChildRemove, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetOrInitializeExtension<TValue>(pb::RepeatedExtension<ChildRemove, TValue> extension) {
    return pb::ExtensionSet.GetOrInitialize(ref _extensions, extension);
  }
  public void SetExtension<TValue>(pb::Extension<ChildRemove, TValue> extension, TValue value) {
    pb::ExtensionSet.Set(ref _extensions, extension, value);
  }
  public bool HasExtension<TValue>(pb::Extension<ChildRemove, TValue> extension) {
    return pb::ExtensionSet.Has(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::Extension<ChildRemove, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::RepeatedExtension<ChildRemove, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }

}

/// <summary>
///* Common Variant value type for a remote node. 
/// </summary>
public sealed partial class VariantValue : pb::IExtendableMessage<VariantValue>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<VariantValue> _parser = new pb::MessageParser<VariantValue>(() => new VariantValue());
  private pb::UnknownFieldSet _unknownFields;
  private pb::ExtensionSet<VariantValue> _extensions;
  private pb::ExtensionSet<VariantValue> _Extensions { get { return _extensions; } }
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<VariantValue> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StudioReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public VariantValue() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public VariantValue(VariantValue other) : this() {
    _hasBits0 = other._hasBits0;
    nodeId_ = other.nodeId_;
    dValue_ = other.dValue_;
    fValue_ = other.fValue_;
    ui64Value_ = other.ui64Value_;
    i64Value_ = other.i64Value_;
    uiValue_ = other.uiValue_;
    iValue_ = other.iValue_;
    usValue_ = other.usValue_;
    sValue_ = other.sValue_;
    ucValue_ = other.ucValue_;
    cValue_ = other.cValue_;
    bValue_ = other.bValue_;
    strValue_ = other.strValue_;
    timestamp_ = other.timestamp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    _extensions = pb::ExtensionSet.Clone(other._extensions);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public VariantValue Clone() {
    return new VariantValue(this);
  }

  /// <summary>Field number for the "node_id" field.</summary>
  public const int NodeIdFieldNumber = 1;
  private readonly static uint NodeIdDefaultValue = 0;

  private uint nodeId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint NodeId {
    get { if ((_hasBits0 & 1) != 0) { return nodeId_; } else { return NodeIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      nodeId_ = value;
    }
  }
  /// <summary>Gets whether the "node_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNodeId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "node_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNodeId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "d_value" field.</summary>
  public const int DValueFieldNumber = 2;
  private readonly static double DValueDefaultValue = 0D;

  private double dValue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public double DValue {
    get { if ((_hasBits0 & 2) != 0) { return dValue_; } else { return DValueDefaultValue; } }
    set {
      _hasBits0 |= 2;
      dValue_ = value;
    }
  }
  /// <summary>Gets whether the "d_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDValue {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "d_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDValue() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "f_value" field.</summary>
  public const int FValueFieldNumber = 3;
  private readonly static float FValueDefaultValue = 0F;

  private float fValue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float FValue {
    get { if ((_hasBits0 & 4) != 0) { return fValue_; } else { return FValueDefaultValue; } }
    set {
      _hasBits0 |= 4;
      fValue_ = value;
    }
  }
  /// <summary>Gets whether the "f_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFValue {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "f_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFValue() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "ui64_value" field.</summary>
  public const int Ui64ValueFieldNumber = 4;
  private readonly static ulong Ui64ValueDefaultValue = 0UL;

  private ulong ui64Value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Ui64Value {
    get { if ((_hasBits0 & 8) != 0) { return ui64Value_; } else { return Ui64ValueDefaultValue; } }
    set {
      _hasBits0 |= 8;
      ui64Value_ = value;
    }
  }
  /// <summary>Gets whether the "ui64_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUi64Value {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "ui64_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUi64Value() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "i64_value" field.</summary>
  public const int I64ValueFieldNumber = 5;
  private readonly static long I64ValueDefaultValue = 0L;

  private long i64Value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long I64Value {
    get { if ((_hasBits0 & 16) != 0) { return i64Value_; } else { return I64ValueDefaultValue; } }
    set {
      _hasBits0 |= 16;
      i64Value_ = value;
    }
  }
  /// <summary>Gets whether the "i64_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasI64Value {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "i64_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearI64Value() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "ui_value" field.</summary>
  public const int UiValueFieldNumber = 6;
  private readonly static uint UiValueDefaultValue = 0;

  private uint uiValue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UiValue {
    get { if ((_hasBits0 & 32) != 0) { return uiValue_; } else { return UiValueDefaultValue; } }
    set {
      _hasBits0 |= 32;
      uiValue_ = value;
    }
  }
  /// <summary>Gets whether the "ui_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUiValue {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "ui_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUiValue() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "i_value" field.</summary>
  public const int IValueFieldNumber = 7;
  private readonly static int IValueDefaultValue = 0;

  private int iValue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int IValue {
    get { if ((_hasBits0 & 64) != 0) { return iValue_; } else { return IValueDefaultValue; } }
    set {
      _hasBits0 |= 64;
      iValue_ = value;
    }
  }
  /// <summary>Gets whether the "i_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIValue {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "i_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIValue() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "us_value" field.</summary>
  public const int UsValueFieldNumber = 8;
  private readonly static uint UsValueDefaultValue = 0;

  private uint usValue_;
  /// <summary>
  /// uint used as ushort (which protobuf doesnt have)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UsValue {
    get { if ((_hasBits0 & 128) != 0) { return usValue_; } else { return UsValueDefaultValue; } }
    set {
      _hasBits0 |= 128;
      usValue_ = value;
    }
  }
  /// <summary>Gets whether the "us_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUsValue {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "us_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUsValue() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "s_value" field.</summary>
  public const int SValueFieldNumber = 9;
  private readonly static int SValueDefaultValue = 0;

  private int sValue_;
  /// <summary>
  /// int used as short
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int SValue {
    get { if ((_hasBits0 & 256) != 0) { return sValue_; } else { return SValueDefaultValue; } }
    set {
      _hasBits0 |= 256;
      sValue_ = value;
    }
  }
  /// <summary>Gets whether the "s_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSValue {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "s_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSValue() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "uc_value" field.</summary>
  public const int UcValueFieldNumber = 10;
  private readonly static uint UcValueDefaultValue = 0;

  private uint ucValue_;
  /// <summary>
  /// uint used as uchar
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UcValue {
    get { if ((_hasBits0 & 512) != 0) { return ucValue_; } else { return UcValueDefaultValue; } }
    set {
      _hasBits0 |= 512;
      ucValue_ = value;
    }
  }
  /// <summary>Gets whether the "uc_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUcValue {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "uc_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUcValue() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "c_value" field.</summary>
  public const int CValueFieldNumber = 11;
  private readonly static int CValueDefaultValue = 0;

  private int cValue_;
  /// <summary>
  /// int used as char
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CValue {
    get { if ((_hasBits0 & 1024) != 0) { return cValue_; } else { return CValueDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      cValue_ = value;
    }
  }
  /// <summary>Gets whether the "c_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCValue {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "c_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCValue() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "b_value" field.</summary>
  public const int BValueFieldNumber = 12;
  private readonly static bool BValueDefaultValue = false;

  private bool bValue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool BValue {
    get { if ((_hasBits0 & 2048) != 0) { return bValue_; } else { return BValueDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      bValue_ = value;
    }
  }
  /// <summary>Gets whether the "b_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBValue {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "b_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBValue() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "str_value" field.</summary>
  public const int StrValueFieldNumber = 13;
  private readonly static string StrValueDefaultValue = "";

  private string strValue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string StrValue {
    get { return strValue_ ?? StrValueDefaultValue; }
    set {
      strValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "str_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStrValue {
    get { return strValue_ != null; }
  }
  /// <summary>Clears the value of the "str_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStrValue() {
    strValue_ = null;
  }

  /// <summary>Field number for the "timestamp" field.</summary>
  public const int TimestampFieldNumber = 14;
  private readonly static ulong TimestampDefaultValue = 0UL;

  private ulong timestamp_;
  /// <summary>
  /// Source may provide timestamp for sent value
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Timestamp {
    get { if ((_hasBits0 & 4096) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      timestamp_ = value;
    }
  }
  /// <summary>Gets whether the "timestamp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTimestamp {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "timestamp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTimestamp() {
    _hasBits0 &= ~4096;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as VariantValue);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(VariantValue other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (NodeId != other.NodeId) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DValue, other.DValue)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FValue, other.FValue)) return false;
    if (Ui64Value != other.Ui64Value) return false;
    if (I64Value != other.I64Value) return false;
    if (UiValue != other.UiValue) return false;
    if (IValue != other.IValue) return false;
    if (UsValue != other.UsValue) return false;
    if (SValue != other.SValue) return false;
    if (UcValue != other.UcValue) return false;
    if (CValue != other.CValue) return false;
    if (BValue != other.BValue) return false;
    if (StrValue != other.StrValue) return false;
    if (Timestamp != other.Timestamp) return false;
    if (!Equals(_extensions, other._extensions)) {
      return false;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasNodeId) hash ^= NodeId.GetHashCode();
    if (HasDValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DValue);
    if (HasFValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FValue);
    if (HasUi64Value) hash ^= Ui64Value.GetHashCode();
    if (HasI64Value) hash ^= I64Value.GetHashCode();
    if (HasUiValue) hash ^= UiValue.GetHashCode();
    if (HasIValue) hash ^= IValue.GetHashCode();
    if (HasUsValue) hash ^= UsValue.GetHashCode();
    if (HasSValue) hash ^= SValue.GetHashCode();
    if (HasUcValue) hash ^= UcValue.GetHashCode();
    if (HasCValue) hash ^= CValue.GetHashCode();
    if (HasBValue) hash ^= BValue.GetHashCode();
    if (HasStrValue) hash ^= StrValue.GetHashCode();
    if (HasTimestamp) hash ^= Timestamp.GetHashCode();
    if (_extensions != null) {
      hash ^= _extensions.GetHashCode();
    }
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasNodeId) {
      output.WriteRawTag(8);
      output.WriteUInt32(NodeId);
    }
    if (HasDValue) {
      output.WriteRawTag(17);
      output.WriteDouble(DValue);
    }
    if (HasFValue) {
      output.WriteRawTag(29);
      output.WriteFloat(FValue);
    }
    if (HasUi64Value) {
      output.WriteRawTag(32);
      output.WriteUInt64(Ui64Value);
    }
    if (HasI64Value) {
      output.WriteRawTag(40);
      output.WriteSInt64(I64Value);
    }
    if (HasUiValue) {
      output.WriteRawTag(48);
      output.WriteUInt32(UiValue);
    }
    if (HasIValue) {
      output.WriteRawTag(56);
      output.WriteSInt32(IValue);
    }
    if (HasUsValue) {
      output.WriteRawTag(64);
      output.WriteUInt32(UsValue);
    }
    if (HasSValue) {
      output.WriteRawTag(72);
      output.WriteSInt32(SValue);
    }
    if (HasUcValue) {
      output.WriteRawTag(80);
      output.WriteUInt32(UcValue);
    }
    if (HasCValue) {
      output.WriteRawTag(88);
      output.WriteSInt32(CValue);
    }
    if (HasBValue) {
      output.WriteRawTag(96);
      output.WriteBool(BValue);
    }
    if (HasStrValue) {
      output.WriteRawTag(106);
      output.WriteString(StrValue);
    }
    if (HasTimestamp) {
      output.WriteRawTag(112);
      output.WriteUInt64(Timestamp);
    }
    if (_extensions != null) {
      _extensions.WriteTo(output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasNodeId) {
      output.WriteRawTag(8);
      output.WriteUInt32(NodeId);
    }
    if (HasDValue) {
      output.WriteRawTag(17);
      output.WriteDouble(DValue);
    }
    if (HasFValue) {
      output.WriteRawTag(29);
      output.WriteFloat(FValue);
    }
    if (HasUi64Value) {
      output.WriteRawTag(32);
      output.WriteUInt64(Ui64Value);
    }
    if (HasI64Value) {
      output.WriteRawTag(40);
      output.WriteSInt64(I64Value);
    }
    if (HasUiValue) {
      output.WriteRawTag(48);
      output.WriteUInt32(UiValue);
    }
    if (HasIValue) {
      output.WriteRawTag(56);
      output.WriteSInt32(IValue);
    }
    if (HasUsValue) {
      output.WriteRawTag(64);
      output.WriteUInt32(UsValue);
    }
    if (HasSValue) {
      output.WriteRawTag(72);
      output.WriteSInt32(SValue);
    }
    if (HasUcValue) {
      output.WriteRawTag(80);
      output.WriteUInt32(UcValue);
    }
    if (HasCValue) {
      output.WriteRawTag(88);
      output.WriteSInt32(CValue);
    }
    if (HasBValue) {
      output.WriteRawTag(96);
      output.WriteBool(BValue);
    }
    if (HasStrValue) {
      output.WriteRawTag(106);
      output.WriteString(StrValue);
    }
    if (HasTimestamp) {
      output.WriteRawTag(112);
      output.WriteUInt64(Timestamp);
    }
    if (_extensions != null) {
      _extensions.WriteTo(ref output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasNodeId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NodeId);
    }
    if (HasDValue) {
      size += 1 + 8;
    }
    if (HasFValue) {
      size += 1 + 4;
    }
    if (HasUi64Value) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Ui64Value);
    }
    if (HasI64Value) {
      size += 1 + pb::CodedOutputStream.ComputeSInt64Size(I64Value);
    }
    if (HasUiValue) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UiValue);
    }
    if (HasIValue) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(IValue);
    }
    if (HasUsValue) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UsValue);
    }
    if (HasSValue) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SValue);
    }
    if (HasUcValue) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UcValue);
    }
    if (HasCValue) {
      size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CValue);
    }
    if (HasBValue) {
      size += 1 + 1;
    }
    if (HasStrValue) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StrValue);
    }
    if (HasTimestamp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
    }
    if (_extensions != null) {
      size += _extensions.CalculateSize();
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(VariantValue other) {
    if (other == null) {
      return;
    }
    if (other.HasNodeId) {
      NodeId = other.NodeId;
    }
    if (other.HasDValue) {
      DValue = other.DValue;
    }
    if (other.HasFValue) {
      FValue = other.FValue;
    }
    if (other.HasUi64Value) {
      Ui64Value = other.Ui64Value;
    }
    if (other.HasI64Value) {
      I64Value = other.I64Value;
    }
    if (other.HasUiValue) {
      UiValue = other.UiValue;
    }
    if (other.HasIValue) {
      IValue = other.IValue;
    }
    if (other.HasUsValue) {
      UsValue = other.UsValue;
    }
    if (other.HasSValue) {
      SValue = other.SValue;
    }
    if (other.HasUcValue) {
      UcValue = other.UcValue;
    }
    if (other.HasCValue) {
      CValue = other.CValue;
    }
    if (other.HasBValue) {
      BValue = other.BValue;
    }
    if (other.HasStrValue) {
      StrValue = other.StrValue;
    }
    if (other.HasTimestamp) {
      Timestamp = other.Timestamp;
    }
    pb::ExtensionSet.MergeFrom(ref _extensions, other._extensions);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          }
          break;
        case 8: {
          NodeId = input.ReadUInt32();
          break;
        }
        case 17: {
          DValue = input.ReadDouble();
          break;
        }
        case 29: {
          FValue = input.ReadFloat();
          break;
        }
        case 32: {
          Ui64Value = input.ReadUInt64();
          break;
        }
        case 40: {
          I64Value = input.ReadSInt64();
          break;
        }
        case 48: {
          UiValue = input.ReadUInt32();
          break;
        }
        case 56: {
          IValue = input.ReadSInt32();
          break;
        }
        case 64: {
          UsValue = input.ReadUInt32();
          break;
        }
        case 72: {
          SValue = input.ReadSInt32();
          break;
        }
        case 80: {
          UcValue = input.ReadUInt32();
          break;
        }
        case 88: {
          CValue = input.ReadSInt32();
          break;
        }
        case 96: {
          BValue = input.ReadBool();
          break;
        }
        case 106: {
          StrValue = input.ReadString();
          break;
        }
        case 112: {
          Timestamp = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, ref input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          }
          break;
        case 8: {
          NodeId = input.ReadUInt32();
          break;
        }
        case 17: {
          DValue = input.ReadDouble();
          break;
        }
        case 29: {
          FValue = input.ReadFloat();
          break;
        }
        case 32: {
          Ui64Value = input.ReadUInt64();
          break;
        }
        case 40: {
          I64Value = input.ReadSInt64();
          break;
        }
        case 48: {
          UiValue = input.ReadUInt32();
          break;
        }
        case 56: {
          IValue = input.ReadSInt32();
          break;
        }
        case 64: {
          UsValue = input.ReadUInt32();
          break;
        }
        case 72: {
          SValue = input.ReadSInt32();
          break;
        }
        case 80: {
          UcValue = input.ReadUInt32();
          break;
        }
        case 88: {
          CValue = input.ReadSInt32();
          break;
        }
        case 96: {
          BValue = input.ReadBool();
          break;
        }
        case 106: {
          StrValue = input.ReadString();
          break;
        }
        case 112: {
          Timestamp = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

  public TValue GetExtension<TValue>(pb::Extension<VariantValue, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetExtension<TValue>(pb::RepeatedExtension<VariantValue, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetOrInitializeExtension<TValue>(pb::RepeatedExtension<VariantValue, TValue> extension) {
    return pb::ExtensionSet.GetOrInitialize(ref _extensions, extension);
  }
  public void SetExtension<TValue>(pb::Extension<VariantValue, TValue> extension, TValue value) {
    pb::ExtensionSet.Set(ref _extensions, extension, value);
  }
  public bool HasExtension<TValue>(pb::Extension<VariantValue, TValue> extension) {
    return pb::ExtensionSet.Has(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::Extension<VariantValue, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::RepeatedExtension<VariantValue, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }

}

/// <summary>
///* Single and periodic value request message. 
/// </summary>
public sealed partial class ValueRequest : pb::IExtendableMessage<ValueRequest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ValueRequest> _parser = new pb::MessageParser<ValueRequest>(() => new ValueRequest());
  private pb::UnknownFieldSet _unknownFields;
  private pb::ExtensionSet<ValueRequest> _extensions;
  private pb::ExtensionSet<ValueRequest> _Extensions { get { return _extensions; } }
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ValueRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StudioReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ValueRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ValueRequest(ValueRequest other) : this() {
    _hasBits0 = other._hasBits0;
    nodeId_ = other.nodeId_;
    fs_ = other.fs_;
    stop_ = other.stop_;
    sampleRate_ = other.sampleRate_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    _extensions = pb::ExtensionSet.Clone(other._extensions);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ValueRequest Clone() {
    return new ValueRequest(this);
  }

  /// <summary>Field number for the "node_id" field.</summary>
  public const int NodeIdFieldNumber = 1;
  private readonly static uint NodeIdDefaultValue = 0;

  private uint nodeId_;
  /// <summary>
  /// List of node IDs whose value are requested
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint NodeId {
    get { if ((_hasBits0 & 1) != 0) { return nodeId_; } else { return NodeIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      nodeId_ = value;
    }
  }
  /// <summary>Gets whether the "node_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNodeId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "node_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNodeId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "fs" field.</summary>
  public const int FsFieldNumber = 2;
  private readonly static double FsDefaultValue = 0D;

  private double fs_;
  /// <summary>
  /// If present indicates that values expected no more often than provided FS rate
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public double Fs {
    get { if ((_hasBits0 & 2) != 0) { return fs_; } else { return FsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      fs_ = value;
    }
  }
  /// <summary>Gets whether the "fs" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFs {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "fs" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFs() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "stop" field.</summary>
  public const int StopFieldNumber = 3;
  private readonly static bool StopDefaultValue = false;

  private bool stop_;
  /// <summary>
  /// (server will accumulate and time-stamp values if they occur more often)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Stop {
    get { if ((_hasBits0 & 4) != 0) { return stop_; } else { return StopDefaultValue; } }
    set {
      _hasBits0 |= 4;
      stop_ = value;
    }
  }
  /// <summary>Gets whether the "stop" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStop {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "stop" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStop() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "sample_rate" field.</summary>
  public const int SampleRateFieldNumber = 4;
  private readonly static double SampleRateDefaultValue = 0D;

  private double sampleRate_;
  /// <summary>
  /// If non zero indicates that values should be
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public double SampleRate {
    get { if ((_hasBits0 & 8) != 0) { return sampleRate_; } else { return SampleRateDefaultValue; } }
    set {
      _hasBits0 |= 8;
      sampleRate_ = value;
    }
  }
  /// <summary>Gets whether the "sample_rate" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSampleRate {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "sample_rate" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSampleRate() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ValueRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ValueRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (NodeId != other.NodeId) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Fs, other.Fs)) return false;
    if (Stop != other.Stop) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SampleRate, other.SampleRate)) return false;
    if (!Equals(_extensions, other._extensions)) {
      return false;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasNodeId) hash ^= NodeId.GetHashCode();
    if (HasFs) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Fs);
    if (HasStop) hash ^= Stop.GetHashCode();
    if (HasSampleRate) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SampleRate);
    if (_extensions != null) {
      hash ^= _extensions.GetHashCode();
    }
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasNodeId) {
      output.WriteRawTag(8);
      output.WriteUInt32(NodeId);
    }
    if (HasFs) {
      output.WriteRawTag(17);
      output.WriteDouble(Fs);
    }
    if (HasStop) {
      output.WriteRawTag(24);
      output.WriteBool(Stop);
    }
    if (HasSampleRate) {
      output.WriteRawTag(33);
      output.WriteDouble(SampleRate);
    }
    if (_extensions != null) {
      _extensions.WriteTo(output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasNodeId) {
      output.WriteRawTag(8);
      output.WriteUInt32(NodeId);
    }
    if (HasFs) {
      output.WriteRawTag(17);
      output.WriteDouble(Fs);
    }
    if (HasStop) {
      output.WriteRawTag(24);
      output.WriteBool(Stop);
    }
    if (HasSampleRate) {
      output.WriteRawTag(33);
      output.WriteDouble(SampleRate);
    }
    if (_extensions != null) {
      _extensions.WriteTo(ref output);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasNodeId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NodeId);
    }
    if (HasFs) {
      size += 1 + 8;
    }
    if (HasStop) {
      size += 1 + 1;
    }
    if (HasSampleRate) {
      size += 1 + 8;
    }
    if (_extensions != null) {
      size += _extensions.CalculateSize();
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ValueRequest other) {
    if (other == null) {
      return;
    }
    if (other.HasNodeId) {
      NodeId = other.NodeId;
    }
    if (other.HasFs) {
      Fs = other.Fs;
    }
    if (other.HasStop) {
      Stop = other.Stop;
    }
    if (other.HasSampleRate) {
      SampleRate = other.SampleRate;
    }
    pb::ExtensionSet.MergeFrom(ref _extensions, other._extensions);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          }
          break;
        case 8: {
          NodeId = input.ReadUInt32();
          break;
        }
        case 17: {
          Fs = input.ReadDouble();
          break;
        }
        case 24: {
          Stop = input.ReadBool();
          break;
        }
        case 33: {
          SampleRate = input.ReadDouble();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          if (!pb::ExtensionSet.TryMergeFieldFrom(ref _extensions, ref input)) {
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          }
          break;
        case 8: {
          NodeId = input.ReadUInt32();
          break;
        }
        case 17: {
          Fs = input.ReadDouble();
          break;
        }
        case 24: {
          Stop = input.ReadBool();
          break;
        }
        case 33: {
          SampleRate = input.ReadDouble();
          break;
        }
      }
    }
  }
  #endif

  public TValue GetExtension<TValue>(pb::Extension<ValueRequest, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetExtension<TValue>(pb::RepeatedExtension<ValueRequest, TValue> extension) {
    return pb::ExtensionSet.Get(ref _extensions, extension);
  }
  public pbc::RepeatedField<TValue> GetOrInitializeExtension<TValue>(pb::RepeatedExtension<ValueRequest, TValue> extension) {
    return pb::ExtensionSet.GetOrInitialize(ref _extensions, extension);
  }
  public void SetExtension<TValue>(pb::Extension<ValueRequest, TValue> extension, TValue value) {
    pb::ExtensionSet.Set(ref _extensions, extension, value);
  }
  public bool HasExtension<TValue>(pb::Extension<ValueRequest, TValue> extension) {
    return pb::ExtensionSet.Has(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::Extension<ValueRequest, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }
  public void ClearExtension<TValue>(pb::RepeatedExtension<ValueRequest, TValue> extension) {
    pb::ExtensionSet.Clear(ref _extensions, extension);
  }

}

#endregion


#endregion Designer generated code
